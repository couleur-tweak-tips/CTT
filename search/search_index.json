{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Index","text":"<p> the knowledge vault </p> <p>You've reached the website for Couleur Tweak Tips, a comprehensive aggregation of useful resources for enthusiasts looking to expand their toolchain of programs and adopt good practices to enhance the quality of life in daily computer use and video production.</p> <p>These resources have been created with two types of people in mind:</p> <ul> <li>Curious individuals who enjoy reading, doing, and learning.</li> <li>Those who prefer quickly configuring programs to adhere to recommended standards; some guides offer automated versions in the form of PowerShell scripts.</li> </ul> <p>This website has been meticulously curated over the years, it evolved from a crowded discord server</p> <p> </p>"},{"location":"alita/","title":"Alita","text":""},{"location":"alita/#_1","title":"Alita","text":"<p> <p></p> <p> read </p>"},{"location":"contact/","title":"Contact","text":"<ul> <li>Discord server: dsc.gg/CTT</li> <li>GitHub organization: /couleur-tweak-tips</li> <li> <p>Website: ctt.cx(1)</p> <ol> <li>It's source code is available here</li> </ol> </li> </ul>"},{"location":"contact/#couleur","title":"Couleur","text":"<ul> <li> Discord: <code>@couleur.</code> | 352830597778898944</li> <li> Telegram: @couleur</li> <li> Twitter: @couleurminemen</li> <li> GitHub: /couleurm</li> <li> E-mail: <code>'couleur{0}riseup.net' -f '@'</code> in PowerShell</li> <li> YouTube: @couleur &amp; @couleur2</li> <li> Mastodon: hachyderm.io/@coler</li> <li> Bluesky: couleur.bsky.social</li> </ul>"},{"location":"contributing/","title":"Contribution Guidelines","text":"<p>This website was not made to thoroughly index and review every single available program under the sun, but instead hand-pick a couple that are worth recommending, though one or multiple \"honorable mentions\" categories at the bottom of a program's page is acceptable. </p> <p>You can contact us about your idea:</p> <ul> <li> <p>Send your idea in the CTT Discord's <code>#suggestions</code> forum or in DMs(1)</p> <ol> <li>If what you're writing is beyond Discord's 2000 character limit (4000 w/ nitro) make a Cryptpad page</li> </ol> </li> </ul> <p>Or do most of the work by </p> <ol> <li> <p>Fork <code>couleur-tweak-tips/CTT</code> on GitHub </p> </li> <li> <p>Contributing your fix / idea and opening a pull request</p> </li> </ol> <p>Doing this implies you respect the following:</p> <ul> <li>Have one specific subject per pull request: Having multiple things going on in one pull requests makes resolving modifying what is denied and keeping what's accepted challenging, stay concise and faithful to your pull request's name.</li> <li>Do not leave placeholder links to pages that do not exist like <code>[this](./placeholder/)</code></li> </ul>"},{"location":"credits/","title":"Credits","text":""},{"location":"credits/#inspirations","title":"Inspirations","text":"<ul> <li> <p>ctrl, the original optimizations &amp; render discord which has been acquired(1) and turned into Hone in early 2021.</p> <ol> <li>To be honest with you I'm not even sure what exactly happened to it, \"acquired\" might not be the term, anyways the Hone server used to be ctrl.</li> </ol> </li> <li> <p>fr33thy &amp; capetlevrai for getting me into making zips of tweaks back in the day.</p> </li> <li>Chris Titus Tech &amp; PoshGUI for getting me into PowerShell</li> <li> <p>temp for original batch OptiFine patcher(1) &amp; revisions</p> <ol> <li>I've since made my own library for game patching in PowerShell, it's equivalent today is <code>Optimize-OptiFine</code></li> </ol> </li> <li> <p>dark theme color palette heavily inspired from pmydown-extensions docs, thank you facelessuser \ud83e\udd70</p> </li> </ul>"},{"location":"credits/#credits","title":"Credits","text":"<ul> <li>teo: AMD (AMF) OBS settings</li> <li>Ashank: Intel (QuickSync) OBS settings</li> <li>zazk: Apex settings</li> <li>pepay: lightmap/overlay</li> <li>tellinq: obs themes &amp; cheatbreaker.net</li> <li>atzur: reenc &amp; git</li> <li>vladaad: ffmpeg batch scripts, git and very clever dissing of diagonal people</li> </ul> <ul> <li> <p>aetopia, chalice, tellinq, he3als(1), vladaad, atzur, frost (2), june and all of the staff for keeping the discord (somewhat) sane </p> <ol> <li></li> <li></li> </ol> </li> <li> <p>synthicy for designing/helping set up the old http://ctt.cx</p> </li> <li>squidfunk for mkdocs-material, the documentation framework you're reading right now.</li> <li>manu for  the banner art</li> <li>tekno for blur, mifi for losslesscut, vouk for voukoder, the list goes on for all programs mentioned on ctt</li> <li>amine  &amp; strafie </li> </ul>"},{"location":"games/","title":"Games","text":"<p>This category contains recommended configurations and additional software (e.g. minecraft mods/launchers) to help you have a game that runs better.</p> <p>If a game you'd like to optimize isn't listed here, consider checking out TroubleChute's videos as he often covers games when they come out alongside benchmarks showing the performance impact of the configuration he recommends.</p>"},{"location":"games/minecraft/1.7.10/","title":"1.7.10","text":""},{"location":"games/minecraft/1.7.10/#list-of-essential-1710-mods","title":"List of \"Essential\" 1.7.10 Mods","text":"<p>Check for updated 1.7.10 mods on Modrinth</p> <p>modpack I linked in CTT in 2022:</p>"},{"location":"games/minecraft/1.7.10/#fixes","title":"Fixes","text":"<ul> <li>TCPNoDelay (prplz) https://github.com/prplz/TcpNoDelayMod/releases</li> <li>OptiFine (sp614x) http://optifine.net/adloadx?f=OptiFine_1.7.10_HD_U_E7.jar</li> <li>FastChat (fyu) https://www.mediafire.com/file/qg4b8vzjrljau0b</li> <li>Sidebar (dewgs) https://www.mediafire.com/file/1xz8c89chd1ed7c</li> <li>In-game server switcher (Canalex) https://www.mediafire.com/file/5939cosa5eanbqz</li> <li>Toggle Sneak (powns) https://www.mediafire.com/file/lic4t8kqwuodt6m/</li> <li>ArmorStatus (bspkrs) https://www.curseforge.com/minecraft/mc-mods/armorstatushud </li> <li>Status Effect (bspkrs)  https://www.curseforge.com/minecraft/mc-mods/statuseffecthud <ul> <li>(needs Bspkrs core)</li> </ul> </li> </ul>"},{"location":"games/minecraft/1.7.10/#aesthetic","title":"Aesthetic","text":"<ul> <li>Shiny pots (fyu) https://www.mediafire.com/file/da7i1pso6v64au6</li> <li>Time Changer (fyu) https://www.mediafire.com/file/l4aa40kc7h7d3cs</li> <li>Particles (dewgs) https://www.mediafire.com/file/4571sad3xp07hep</li> <li>Perspective (Canalex) https://www.mediafire.com/file/ysm9ddw4kmad1ya</li> <li>Skinport (alex slim skins in 1.8) https://www.curseforge.com/minecraft/mc-mods/skinport</li> </ul> <p>credits to chalice</p>"},{"location":"games/minecraft/1.8.9/","title":"Redirecting...","text":""},{"location":"games/minecraft/cheatbreaker/","title":"CheatBreaker","text":"<p>Some developers (notably Tellinq and Shon) continued CheatBreaker unofficially after the official shut down, it has a launcher that lets you launch CheatBreaker in version 1.7 or 1.8</p> <ul> <li> https://cheatbreaker.net</li> <li> https://discord.gg/cheatbreaker-633325309395206156</li> <li> https://aur.archlinux.org/packages/cheatbreaker</li> <li> https://docs.cheatbreaker.net</li> </ul>"},{"location":"games/minecraft/cheatbreaker/#features","title":"Features","text":"<ul> <li>Supports modern versions of Java (23 as of writing), using a newer version can help with ram usage, scaling &amp; performance.</li> <li>Toggle Mod Keybind (useful for quickly toggling Chat, Armor HUD and Scoreboard depending on the gamemode you're playing)</li> <li>Strip the mod labels to only show the numbers (e.g for FPS and potion effects)</li> <li>Disable first person fire (in Pack Tweaks mod)</li> </ul> <p>You can have 1.8's \"minimum FPS\" option for your FPS mod in 1.7.10 </p> <p>It's Pack Tweaker mod lets you do cool stuff like remote item tooltips for easier refills, or make the inventory transparent regardless of the pack </p> <p>Pack Tweaker can also make a strong vignette effect, set type to static and opacity to 100% </p>"},{"location":"games/minecraft/lunarclient/","title":"Lunar Client","text":"<ul> <li> https://www.lunarclient.com/download</li> <li> <code>winget install Moonsworth.LunarClient</code></li> <li> https://aur.archlinux.org/packages/lunar-client</li> </ul> <p>Go to RSHIFT &gt; MODS &gt; Settings &gt; Performance.</p> <ul> <li><code>Hide Foliage</code>: OFF (hides grass and tall grass)</li> <li><code>Hide End Portals</code>: Always</li> <li><code>Show Enchantment Glint</code>: None</li> <li><code>Lazy Chunk Loading</code>: Lowest<ul> <li>This option will limit the speed at which chunks are loaded, potentially impacting your gameplay experience. If you desire faster chunk loading, set this option higher.</li> </ul> </li> <li><code>Shadow</code>: OFF</li> <li><code>Entities</code>: Lowest<ul> <li>This option will limit the distance at which entities (players, mobs, etc.) are loaded, which may affect your gameplay experience. If you would like entities to load from farther, set this option higher.</li> </ul> </li> <li><code>Tile Entities</code>: Lowest</li> <li><code>Show Ground Arrows</code>: OFF</li> <li><code>Show Stuck Arrows</code>: OFF</li> <li><code>Hide Placed Skulls</code>: ON</li> </ul>"},{"location":"games/minecraft/lunarclient/#lunar-mods-performance-impact","title":"Lunar mods performance impact","text":"<p>if you have a mod that has no purpose why even bother using it - Tellinq </p> <ul> <li>\ud83d\udfe2 Freelook - No impact leaving it enabled</li> <li>\ud83d\udfe2 FPS</li> <li>\ud83d\udfe2 CPS</li> <li>\ud83d\udfe2 Saturation</li> <li>\ud83d\udfe2 Potion effects</li> <li>\ud83d\udfe2 Toggle sprint/sneak - make sure to disable hud text if you don't use it</li> <li>\ud83d\udfe2 Pack Display</li> <li>\ud83d\udfe2 3D Skins - surprisingly lightweights</li> <li>\ud83d\udfe1 Armor Status</li> <li>\ud83d\udfe1 Custom crosshair</li> <li>\ud83d\udfe1 ReplayMod</li> <li>\ud83d\udfe1 Coordinates</li> <li>\ud83d\udfe1 Keystrokes</li> <li>\ud83d\udfe1 Custom sky</li> <li>\ud83d\udfe0 Chat (not the mod, talking about enabling/disabling it completely)</li> <li>\ud83d\udfe0 Scoreboard</li> <li>\ud83d\udfe0 Net graph</li> <li>\ud83d\udfe0 Name tags (not the mod, talking about toggling on/off name plates completely)</li> <li>\ud83d\udd34 Cooldowns</li> <li>\ud83d\udd34 Motion blur - (because you need  to turn off <code>Fast Render</code> to make it work)</li> <li>\ud83d\udd34 Fancy direction </li> </ul> <p>(Only I tested this in 1.7.10, I'd appreciate some testing from others, let me know in DMs)</p> <p>Partly taken from Lunar Client's FPS Issue solution article</p>"},{"location":"games/minecraft/modern/","title":"Redirecting...","text":""},{"location":"games/minecraft/optifine/","title":"Optifine","text":"<ul> <li>https://optifine.net/downloads</li> <li>https://optifine.net/adloadx?f=preview_OptiFine_1.8.9_HD_U_M6_pre2.jar</li> <li>https://optifine.net/adloadx?f=OptiFine_1.7.10_HD_U_E7.jar</li> </ul> <p>You can overclock and tweak your PC all you want, the simplest and most important things to check are in-game settings:</p> <ul> <li>Make sure <code>Fast Render</code> turned on if you struggle with your FPS, this is the most impactful setting for performance,</li> <li>If you don't mind, disabling <code>Custom Sky</code> will help a bit. </li> <li>Putting <code>Render distance</code> to 4 is enough for practice in my opinion.</li> <li>If you don't have a good GPU, consider playing in <code>1280x720</code>, it can significantly increase performance.</li> <li>You can turn on Smooth FPS to lower Minecraft's GPU utilization (e.g to leave more for OBS' NVENC usage)</li> </ul>"},{"location":"games/minecraft/optifine/#go-to-esc-options-video-settings","title":"Go to ESC &gt; Options &gt; Video Settings.","text":"<ul> <li>Video Settings<ul> <li><code>Graphics</code>: Fast</li> <li><code>Render Distance</code>: 4-8</li> <li><code>Use VBOs</code>: ON<ul> <li>In newer versions of the game, VBOs are on by default and cannot be toggled off.</li> </ul> </li> </ul> </li> <li>Performance<ul> <li><code>Smooth FPS</code>: OFF<ul> <li>Turning this on will lower framerates can help with OBS performance issues if Minecraft is taking too much resources. (todo: see if this improves frametimes)</li> </ul> </li> <li><code>Fast Render</code>: ON <ul> <li>Having Fast Render on will disable shaders on 1.7 to 1.12. This includes  Motion Blur, Menu Blur, and Color Saturation.</li> </ul> </li> <li><code>Fast Math</code>: ON</li> <li><code>Render Regions</code>: ON\u00a0<ul> <li>OFF if you are on an integrated graphics card, including Apple silicon.</li> </ul> </li> <li><code>Smooth Animations</code>: ON</li> </ul> </li> <li>Quality<ul> <li><code>Antialiasing</code>: OFF</li> <li><code>Anisotropic Filtering</code>: OFF</li> </ul> </li> </ul> <p>Partly taken from Lunar Client's FPS Issue solution article</p>"},{"location":"games/minecraft/packs/","title":"Packs","text":"<p>A page to showcase all my old packs</p>"},{"location":"games/minecraft/packs/#void-black-void-white","title":"void black &amp; void white","text":"<p>All blocks, one pixel of a certain color</p> <ul> <li>void black</li> <li>void white</li> </ul>"},{"location":"games/minecraft/packs/#ov3rlay-bundle","title":"ov3rlay bundle","text":"<p>This is a bunch of overlays for pvp that think outside the box, type <code>ov3</code> to search them</p> <ul> <li>https://modrinth.com/resourcepack/ov3rlay/versions?c=release</li> </ul> <p></p>"},{"location":"games/minecraft/packs/#operation-black-sky","title":"operation black sky","text":"<p>Makes the sky black, easier to encode for OBS.</p> <p>Settings to turn on:</p> <ul> <li>Custom Sky: ON</li> <li>Sky: OFF (If turned on only the upper half of it will be black)</li> <li>Stars: ON</li> <li>Sun &amp; Moon: OFF</li> </ul> <p></p>"},{"location":"games/minecraft/packs/#clean-items","title":"clean items","text":"<ul> <li>makes every NoDebuff related item's name empty</li> <li>makes inventory gui invisible</li> <li>make sure you language is English (US)</li> </ul>"},{"location":"games/minecraft/packs/#fireless","title":"fireless","text":"<p>make fire on players invisible</p> <p>Fire Animated in Details is not required.</p> <p></p>"},{"location":"games/minecraft/packs/#blocks","title":"blocks","text":"<p>generic block overlay, blocks by Ricardoh</p> <p></p>"},{"location":"games/minecraft/packs/#bw-blocks","title":"b&amp;w blocks","text":"<p>same as above but with no saturation</p> <p></p>"},{"location":"games/minecraft/packs/#aphotics","title":"Aphotics","text":""},{"location":"games/minecraft/prismlauncher/","title":"PrismLauncher","text":"<p>This launcher lets you manage multiple \"instances\", which have the functionality of multiple <code>.minecraft</code> folders,</p> <ul> <li>Minecraft accounts are managed globally and can be selected before launching an instance<ul> <li>As of writing there is no in-game mods that allow you to switch accounts in game, might be because of some of these reasons</li> </ul> </li> <li>You can specify a java runtime environment, ram usage and jvm arguments per instance<ul> <li>Since 9.0 there is now an Automatic Java Management option to easily download JREs</li> </ul> </li> <li> <p>assets, libraries, logs, mods, saves,  screenshots, resourcepacks, assets, config files.. everything is separate</p> </li> <li> <p> https://prismlauncher.org/download</p> </li> <li> https://prismlauncher.org</li> <li> https://github.com/PrismLauncher/PrismLauncher</li> </ul>"},{"location":"games/minecraft/prismlauncher/#modpacks","title":"Modpacks","text":"<p>You can install and update individual mods, resourcepacks, shaders and modpacks from  Modrinth and  CurseForge</p> <p>I recommend checking out my simple-mod-pack if you're looking for a 1.21.4 Fabric modpack, I tried combining mods and config options from every performance modpack I could find and added various quality of life mods, whilst keeping too opinionated settings disabled (you can re-enable them in the mod list).</p>"},{"location":"games/minecraft/prismlauncher/#sharing-instance-subfolders-across-multiple-instances","title":"Sharing instance subfolders across multiple instances","text":"<p>Let's say you have multiple instances and a single resourcepacks folder, how can these instances all use the same folder without making copies?</p> <p>Symbolic links let you do that, you can think of them as a shortcut to a folder that's somewhere else.</p> <p>You can find the instance's folder path by right clicking it and clicking \"folder\", which will open it in your system explorer, then you open the <code>.minecraft</code> folder, then the subfolder you want to turn into a symlink, after that copy the path (<code>CTRL+L</code> + <code>CTRL+C</code>), back up files in it/put them somewhere else, go up a directory and delete the folder so you can create a symlink with the same name.</p> <p>You can create a symlink with the following PowerShell command, the first path provided is where your subfolder actually is, and the second is where to place the symlink.</p> <pre><code>New-Item -ItemType SymbolicLink \"$env:APPDATA\\.minecraft\\resourcepacks\" \"$env:APPDATA\\PrismLauncher\\instances\\1.21.4\\.minecraft\\resourcepacks\"\n</code></pre> <p><code>$env:APPDATA</code> is the equivalent of <code>%APPDATA%</code> in PowerShell</p>"},{"location":"games/minecraft/sodium/","title":"Sodium","text":"<p>Sodium is an alternative to OptiFine for modern versions of Minecraft, it can be used using the Fabric mod loader (an alternative to Forge)</p> <p>Some resourcepacks use OptiFine-specific features that are not in Sodium, here's a list of mods that implement some</p>"},{"location":"games/minecraft/sodium/#get-sodium","title":"Get Sodium","text":"<ul> <li> https://github.com/CaffeineMC/sodium<ul> <li> https://modrinth.com/mod/sodium</li> </ul> </li> </ul> <p>I also recommend the following:</p> <ul> <li> https://github.com/FlashyReese/sodium-extra-fabric<ul> <li> https://modrinth.com/mod/sodium-extra</li> </ul> </li> <li> https://github.com/FlashyReese/reeses-sodium-options<ul> <li> https://modrinth.com/mod/reeses-sodium-options</li> </ul> </li> </ul>"},{"location":"games/minecraft/sodium/#configuration","title":"Configuration","text":"<p>Defaults are fine you can use </p>"},{"location":"misc/","title":"Miscellaneous resources","text":"<p>this category is my hoarder's refuge for unorganized list of interesting websites / repos</p> <ul> <li>https://cli.rs</li> <li>https://is-a.dev</li> <li>https://webcompat.com</li> <li>https://app.diagrams.net</li> </ul>"},{"location":"misc/browser-extensions/","title":"Browser extensions","text":""},{"location":"misc/browser-extensions/#content-alteration","title":"Content alteration","text":""},{"location":"misc/browser-extensions/#ublock-origin","title":"uBlock Origin","text":"<p>No-compromise adblocker, actually a wide-spectrum content blocker with CPU and memory efficiency as a primary feature.</p> <p>Also see Fuck Fuckadblock</p> <p>Chrome Store | Mozilla Addons</p>"},{"location":"misc/browser-extensions/#i-still-dont-care-about-cookies","title":"I still don't care about cookies","text":"<p>Remove cookie prompts from almost all websites!</p> <p>Chrome Store | Mozilla Addons</p>"},{"location":"misc/browser-extensions/#clearurls","title":"ClearURLs","text":"<p>Remove telemetry (like referals, this also shortens them by quite a lot) from sites' links like Amazon</p> <p>Chrome Store | Mozilla Addons</p>"},{"location":"misc/browser-extensions/#fastforward","title":"FastForward","text":"<p>Prevents IP loggers, skips site like adfly, accelerates \"waiting for download\" on curseforge mods..</p> <p>Chrome Store | Mozilla Addons</p>"},{"location":"misc/browser-extensions/#return-youtube-dislikes","title":"Return YouTube Dislikes","text":"<p>Uses the YouTube API/databases to get back dislike counts</p> <p>Chrome Store | Mozilla Addons</p>"},{"location":"misc/browser-extensions/#imagus","title":"Imagus","text":"<p>Enlarges image when you move your cursor over them (I use it all the time, so useful \ud83d\udc4d)</p> <p>Chrome Store | Mozilla Addons</p>"},{"location":"misc/browser-extensions/#darkreader","title":"DarkReader","text":"<p>Make all sites dark mode, you can tune it's brightness/contrast, works on most sites</p> <p>Chrome Store | Mozilla Addons</p>"},{"location":"misc/browser-extensions/#privacy-security","title":"Privacy &amp; Security","text":"<p>Tracking Token Stripper</p>"},{"location":"misc/browser-extensions/#noscript","title":"NoScript","text":"<p>Maximum protection for your browser: NoScript allows active content only for trusted domains of your choice to prevent exploitation.</p> <p>Chrome Store | NoScript</p>"},{"location":"misc/browser-extensions/#googles-disable-google-analytics","title":"Google's Disable Google Analytics","text":"<p>Chrome Store | Mozilla Addons</p>"},{"location":"misc/browser-extensions/#googles-interest-based-ads-opt-out","title":"Google's Interest-based ads opt out","text":"<p>Chrome Store | Firefox</p>"},{"location":"misc/browser-extensions/#localcdn","title":"LocalCDN","text":"<p>Protects you against tracking through CDNs (Content Delivery Networks) by redirecting to local resources.</p> <p>Chrome Store | Mozilla Addons</p>"},{"location":"misc/browser-extensions/#website-specific","title":"Website-specific","text":""},{"location":"misc/browser-extensions/#control-panel-for-twitter","title":"Control Panel for Twitter","text":"<p>Only keep what you actually care about (trim out promoted posts, Topics, Who to follow, ect..)</p> <p>Chrome Store | Mozilla Addons</p>"},{"location":"misc/browser-extensions/#modrinthify","title":"Modrinthify","text":"<p>Redirects curseforge minecraft mod/pack project pages to Modrinth if found</p> <p> MIT: https://github.com/devBoi76/modrinthify</p> <p>Chrome Store | Mozilla Addons</p>"},{"location":"misc/browser-extensions/#youtube","title":"YouTube","text":"<p>also see YouTube Windowed Fullscreen</p>"},{"location":"misc/browser-extensions/#sponsorblock","title":"SponsorBlock","text":"<p>Skip uninteresting parts from YouTube videos (sponsor segments, introductions, fillers..)</p> <p>Chrome Store | Mozilla Addon</p>"},{"location":"misc/browser-extensions/#youtube-audio","title":"YouTube Audio","text":"<p>save bandwith/lag/battery by only streaming audio</p> <p>Mozilla Addons</p>"},{"location":"misc/browser-extensions/#unhook","title":"Unhook","text":"<p>Lets you hide various parts of the YouTube website, if you don't want to get distracted</p> <p>Chrome Store | Mozilla Addons</p>"},{"location":"misc/browser-extensions/#disable-firefox-fullscreen-fade-inout","title":"Disable Firefox fullscreen fade-in/out","text":"<p>in <code>about:config</code></p> <pre><code>full-screen-api.transition-duration.enter\nfull-screen-api.transition-duration.leave\n</code></pre> <p>set both of these to <code>0 0</code></p>"},{"location":"misc/browser-extensions/#dont-track-me-google","title":"Don't track me google","text":"<p>Removes Google's link-conversion/tracking feature. This speeds up loading search results and allows you to normally copy links.</p> <p>Chrome Store | Mozilla Addons</p>"},{"location":"misc/browser-extensions/#steam","title":"Steam","text":"<p>AugmentedSteam SteamDB</p>"},{"location":"misc/browser-extensions/#github","title":"GitHub","text":""},{"location":"misc/browser-extensions/#material-icons-for-github","title":"Material icons for GitHub","text":"<p>Chrome Store | Mozilla Addons</p>"},{"location":"misc/browser-extensions/#refined-github","title":"Refined Github","text":"<p>Adds a bunch of tweaks around the websites</p> <p>Chrome Store Refined GitHub</p>"},{"location":"misc/browser-extensions/#lovely-forks","title":"Lovely forks","text":"<p>Shows active/starred forks of a repository</p> <p>Chrome Store | Mozilla Addons</p>"},{"location":"misc/browser-extensions/#miscellaneous","title":"Miscellaneous","text":""},{"location":"misc/browser-extensions/#aha-music","title":"Aha Music","text":"<p>Literally shazam for the browser</p> <p>Chrone Store</p>"},{"location":"misc/browser-extensions/#smartupscale","title":"SmartUpscale","text":"<p>View low-resolution images using nearest neighbor scaling (e.g. for pixel arts)</p> <p>Chrome Store</p>"},{"location":"misc/browser-extensions/#minimal-scrollbar","title":"Minimal Scrollbar","text":"<p>Chrome Store</p>"},{"location":"misc/browser-extensions/#tree-style-tab","title":"Tree Style Tab","text":"<p>Shows tabs like a tree</p> <p>Chrome Store | Mozilla Addons</p>"},{"location":"misc/browser-extensions/#vimium","title":"Vimium","text":"<p>Lets you control your browser with vim keybindings</p> <p>d / u to go down a page f to click a link (conflicts with youtube fullscreen hotkey) F to open a link in a new tab yf to copy a link to clipboard</p> <p>Chrome Store | Mozilla Addons</p> <p>See more vim keyboard extensions</p> <p>For Firefox there's also Vimium C or vim-vixen, see if you prefer it compared to Vimium FF</p>"},{"location":"misc/browser-extensions/#wappalyzer","title":"Wappalyzer","text":"<p>Lets you see the tech stack used by a site</p> <p>Chrome Store | Mozilla Addons</p> <p>cat-catch</p> <p>Lists all video sources on a page, UI is in chinese</p> <p>Chrome Store | Mozilla Addons</p>"},{"location":"misc/filesharing/","title":"File sharing","text":"<p>In the context of sharing videos, the advantage over YouTube and other social media is that they don't compress your video (it's a file host, it doesn't alter it), so you don't need to upscale and wait. Perfect for sharing render tests / HQ versions of your montages</p> Website Size limit Time limit Terms Donate Quirk  odysee 16GB Forever ToS ? MKV container makes video playback fail on firefox fileditch.com 5GB Forever FAQ ? Pomf, Ran by individual catbox.moe 200MB Forever Legal Support Ran by individual litterbox.catbox.moe 1GB &lt;=3 days Legal ^ Ran by individual gigafile.nu 300GB &lt;=100 days jp en ? Japanese site, visit in english here 0x0.st 512MB see site see site see site Ran by individual gofile.io None see site ToS Premium No embed, video player swisstransfer.com 512MB see FAQ click \"see tos\" ? No embed wetransfer.com 2GB 7d ToS Get Pro No embed upload.disroot.org 2GB 30d About Donate No embed, video player send.portailpro.net 10GB 30d Mentions l\u00e9gales N/A Password / DL limit"},{"location":"misc/filesharing/#quirks-explained","title":"Quirks explained:","text":"<code>No embed</code> <p>The site does not provide hotlinks / direct download links, this means linking it in Telegram / Discord won't provide you with a video player</p> <code>Video player</code> <p>The site features a video player, allowing you to play the video without needing to download the entire file (e.g movies)</p> <code>Ran by individual</code> <p>The site is not owned by a company, most likely a nice person hosting this for free.</p> <code>Pomf</code> <p>Site is powered by Pomf file host</p>"},{"location":"misc/keyboard-shortcuts/","title":"Keyboard shortcuts","text":"<ul> <li>CheatKeys<ul> <li> Adobe Premiere Pro</li> <li> Adobe After Effects</li> <li> DaVinci Resolve</li> <li> Brave Browser</li> <li> Firefox</li> <li> Google Chrome</li> <li> Notepad++</li> <li> Notion</li> <li> Spotify</li> <li> OBS Studio</li> <li> Obsidian</li> <li> VLC media player</li> <li>Windows Terminal</li> <li>Windows File Explorer</li> <li> Discord</li> <li> Foobar2000</li> </ul> </li> </ul>"},{"location":"misc/keyboard-shortcuts/#minecraft","title":"Minecraft","text":"<ul> <li>Use your arrow keys (up) while having chat open to access older messages you've sent.</li> <li>You can use F5 in the server menu list, useful if you wanna check your ping</li> <li><code>TAB</code> autocompletes commands/minecraft username</li> </ul>"},{"location":"misc/keyboard-shortcuts/#discord","title":"Discord","text":"<ul> <li>\u2b50 <code>CTRL+SHIFT+ALT+V</code> Focus on the voice call you're currently in</li> <li>\u2b50<code>CTRL+SHIFT+A</code> Minimalize all categorie, EXTREMELY USEFUL FOR CTT</li> <li>\u2b50<code>CTRL+SHIFT+I</code> Opens Inbox, which filters all unreads/mentions through all servers/channels/DMs</li> <li><code>CTRL+K</code> in discord is very useful, just search whatever you wanna get to and press enter, way faster to get around</li> <li><code>CTRL+R</code> to completely reload Discord if it's broken or you messed up with it/wanna update it</li> <li><code>SHIFT+ENTER</code> to add a line while typing/editing a message</li> <li><code>Middle click</code> on an image will <code>Open original</code> image in your browser</li> <li><code>CTRL+/</code> get a list of ALL discord keyboard combos</li> <li>To quickly edit the last message you sent, press TAB, then UP arrow until your message is highlighted, and press E to edit, the same can be done for replying instead of editing by typing R</li> <li><code>+:thumbsup:</code> reacts :emoji: to latest message</li> <li>Misc tip: you can expand a thread/forum post by clicking it's title at the top</li> </ul>"},{"location":"misc/keyboard-shortcuts/#web-browsers","title":"Web browsers","text":"<ul> <li><code>CTRL+W</code> to close the current browser tab (1000x faster than clicking the small <code>x</code> ) , CTRL+T to open a tab.</li> <li><code>CTRL+SHIFT+T</code> opens your last closed tab</li> <li><code>CTRL+TAB</code>, similar to Windows' <code>ALT+TAB</code>, this cycles through chrome tabs instead of windows the exact same way</li> <li>https://shortlib.netlify.app/apps/google-chrome - List of shortcuts</li> </ul>"},{"location":"misc/keyboard-shortcuts/#windows","title":"Windows","text":"<ul> <li>\u2b50<code>CTRL+L</code> focuses the path bar in the explorer</li> <li>\u2b50<code>F2</code> to rename selected file(s), much faster than right click -&gt; rename</li> <li>\u2b50<code>ALT+Double left click</code> will open the properties of the file you're clicking on, this is insanely useful holy</li> <li>\u2b50<code>WIN+SHIFT+&lt;arrow key&gt;</code> Move focused window to monitor on left/right</li> <li>\u2b50 <code>CTRL+SHIFT+ENTER</code> in Start search, starts the first result as Admin</li> <li><code>WIN+.</code> opens OS-wide emoji picker</li> <li><code>WIN+&lt;arrow key&gt;</code> maximize/minimizes/moves focused window (can also move a window to another monitor)</li> <li><code>ALT+TAB</code> cycle between apps, I cannot recommend this enough.</li> <li><code>SHIFT+DEL</code> will delete the file/s you've selected without passing by the recycle bin</li> <li><code>WIN+I</code> Directly opens Settings</li> <li><code>CTRL+SHIFT+ESC</code> opens the Task Manager</li> <li><code>WIN+L</code> locks/logs you out</li> <li><code>CTRL+SHIFT+N</code> creates a folder</li> <li><code>WIN+E</code> opens Windows Explorer</li> <li><code>WIN+SHIFT+S</code> quick screenshot taker, saves image in your clipboard, try pasting it in &lt;#818422588585672704&gt;</li> <li><code>WIN+M</code> Minimize all apps (aka show desktop)</li> <li>https://support.microsoft.com/en-us/windows/keyboard-shortcuts-in-windows-dcc61a57-8ff0-cffe-9796-cb9706c75eec<ul> <li><code>\"</code> opens USERPROFILE</li> <li><code>control</code> gives you the old control panel</li> <li><code>cmd</code> opens the command prompt &lt;:cmd:833675462282706964&gt;  </li> <li><code>powershell</code> opens PowerShell &lt;:pwsh:907248858973753344&gt; </li> <li><code>appwiz.cpl</code> opens the old control panel's program manager</li> <li><code>main.cpl</code> opens the old mouse panel</li> </ul> </li> </ul>"},{"location":"misc/keyboard-shortcuts/#premiere-pro","title":"Premiere Pro","text":"<ul> <li><code>CTRL+SHIFT+X</code> Remove in/out mark</li> </ul>"},{"location":"misc/keyboard-shortcuts/#vegas-pro","title":"Vegas Pro","text":"<ul> <li>\u2b50<code>ALT+SHIFT+4</code> - Fullscreen preview in another monitor</li> <li>\u2b50<code>Crtl+F4</code> Close Project without closing vegas</li> <li>\u2b50<code>CTRL+LEFT/RIGHT</code> -  moves between markers</li> <li>\u2b50<code>ALT+ENTER</code> - Check Project properties</li> <li><code>ALT+LEFT/ALT+RIGHT</code> - lets you navigate frame by frame</li> <li><code>S</code> - Split/cut media</li> <li><code>Del</code> - Delete Media from timeline</li> <li><code>CTRL+C &amp; CTRL+V</code> - Copy or paste media </li> <li><code>CTRL+Shift+Q</code> - insert new video track</li> <li><code>CTRL+Q</code> - insert new audio track</li> <li><code>CTRL+Z</code> - undo changes</li> <li><code>CTRL+SHIFT+Z</code> - Re-do Changes</li> <li><code>Spacebar</code> - Play Video</li> <li><code>Crtl+N</code> Create new project</li> <li><code>Ctrl + Shift + N</code> Create new project &amp; bypass Properties</li> <li><code>Crtl+O</code> Open project</li> <li><code>Crtl+S</code> Save project</li> <li><code>SHIFT+SCROLL</code> Scrolls on the horizontal axis</li> </ul>"},{"location":"misc/keyboard-shortcuts/#vscode","title":"VSCode","text":"<ul> <li><code>CTRL+L</code> Selected current line</li> <li><code>CTRL+D</code> Select word</li> <li><code>CTRL+X</code> Cuts current line</li> <li><code>CTRL+LMB</code> on a function lets you find the original of where it's been declared</li> <li><code>CTRL+K CTRL+T</code> Opens theme selector</li> <li><code>ALT+UP/DOWN</code> move the current line up or down</li> <li>Dragging Middle click lets you make a rectangle selection of text, same kind as the Windows desktop</li> </ul>"},{"location":"misc/linux-resources/","title":"Linux Resources","text":"<ul> <li>comfig's Linux performance guide</li> <li>dec05eba's gpu-screen-recorder: high performance screen recorder</li> <li>areweanticheatyet: List of games that work and don't work on Linux</li> <li>linuxatemyram: debunking misconceptions regarding high ram usage on linux</li> <li>nvidia-patch: removes restriction on maximum number of simultaneous NVENC video encoding sessions imposed by Nvidia to consumer-grade GPUs.</li> </ul>"},{"location":"misc/linux-resources/#disabling-double-click-prevention-by-he3als","title":"Disabling double-click prevention by he3als","text":"<p>Disable in libinput (for all mice but still limited by mouse firmware): <pre><code>sudo mkdir /etc/libinput/; sudo nano /etc/libinput/local-overrides.quirks\n</code></pre> Then add this in <code>nano</code>, save it, close the terminal and log in and out: <pre><code>[Never Debounce]\nMatchUdevType=mouse\nModelBouncingKeys=1\n</code></pre></p>"},{"location":"misc/linux-resources/#peripherals-related-resources","title":"peripherals-related resources","text":"<ul> <li>OpenRazer: A Razer Synapse alternative for Linux</li> <li>Wired Glorious Mice Utility: (simple build by running <code>make</code> - you can set debounce ms)</li> <li>Wireless Glorious Mice Utility: (build instructions in <code>README.md</code> - you can set debounce ms)</li> </ul>"},{"location":"misc/mkdocs/","title":"mkdocs","text":""},{"location":"misc/mkdocs/#mkdocs-material-cheatsheet","title":"MkDocs Material Cheatsheet","text":"<code>video hotlink</code> <p>https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Video <pre><code>&lt;video width=\"688\" height=\"387\" controls=true preload=auto&gt;\n    &lt;source src=\"VIDEO_URL\"&gt;\n&lt;/video&gt;\n</code></pre></p> <p></p> <code>youtube embed</code> <p>https://developers.google.com/youtube/iframe_api_reference <pre><code>&lt;iframe width=\"688\" height=\"387\" src=\"https://www.youtube-nocookie.com/embed/YOUTUBE_VIDEO_ID?color=white\" frameborder=0 allowfullscreen&gt;&lt;/iframe&gt;\n</code></pre></p>"},{"location":"misc/mkdocs/#websites-using-mkdocs-material","title":"Websites using MkDocs Material","text":"<p>List of cool mkdocs material sites I found that use  Material for MkDocs</p> <ul> <li>Altlas OS docs</li> <li>PrivacyGuides.org</li> <li>Alternatives</li> <li>Hummingbot</li> <li>Tiagolo</li> <li>PyMdown Extensions</li> <li>Algorithms for Competitive Programming</li> <li>Funky Penguin's Geek Cookbook</li> <li>Hacking The Cloud</li> <li>Sample Factory</li> <li>Splink</li> <li>PSRule</li> <li>MkDocs Macros Plugin</li> </ul>"},{"location":"misc/mkdocs/#documentation-frameworks","title":"Documentation frameworks","text":"<ul> <li>Starlight: documentation framework, built by the same people the Astro web framework</li> <li>repair.wiki: whatever they use it looks cool </li> <li>sxcu.net/api/docs: same deal, instant nav  </li> <li>vale.rocks/posts: that progress bar cool asf</li> </ul>"},{"location":"misc/mkdocs/#cool-wording","title":"cool wording","text":"<ul> <li>https://docs.cryptpad.org/en/how_to_contribute.html</li> </ul>"},{"location":"misc/writing-resources/","title":"Writing Resources","text":"<p>Here's a list of stuff I use to write personal stuff / CTT-related resources, and a few misc things to manage the discord</p> <ul> <li>odie.us: minimal google doc viewer, gives free foo.odie.us links</li> <li>rentry: markdown paste, gives free rentry.co/foo links</li> <li>cryptpad: self-hostable, documented, google suite alternative: excel, docs/office, kankan/trello, whiteboard, forms, drive (1gb)</li> <li>obsidian.md: personal markdown note taking, sync with syncthing</li> <li>tldraw &amp; excalidraw: mind maps</li> </ul>"},{"location":"misc/writing-resources/#external-discord-resources","title":"External discord resources","text":"<p> markdown-text-101.md Thread-Watcher: FOSS discord bot that keeps your threads from archiving</p>"},{"location":"misc/writing-resources/#bock-pings-on-discord","title":"Bock pings on discord","text":"<p>This only works for direct @mentions</p> <p>This does not block people replying to your messages with mentions on</p> <p>If you often get solicited on your Discord with unnecessary pings, you can block people from @ing you by making an AutoMod rule that blocks your user ID from being mentioned</p> <p>Simply go in <code>Server Settings</code> -&gt; <code>Safety Setup</code> -&gt; <code>AutoMod</code> -&gt; Scroll down and click <code>Create Block Custom Words</code></p> <p>In <code>Choose your words</code> add the following: (replace your ID)</p> <p><pre><code>*&lt;@352830597778898944&gt;*\n</code></pre> you can add as many users as you want (separate them with commas,,,,,)</p> <p>In <code>Choose a response</code> you should block the message, Send alert in a channel where you can read what people pinged you about</p> <p>If you still want to be pinged by important roles e.g. moderators, add <code>Allow certain roles or channels</code></p>"},{"location":"misc/writing-resources/#searching-stuff-on-discord","title":"Searching stuff on Discord","text":"<ul> <li>On the mobile app, you can search through all of your DMs</li> <li>On desktop, you can sort by oldest</li> <li>YouTube descriptions are included in search results</li> <li> <p>Search for mentions of a user or channel by querying <code>&lt;#channel_id&gt;</code> / <code>&lt;@user_id&gt;</code> </p> </li> <li> <p>The <code>has:</code> <code>from:</code> <code>during:</code> tags all work, they'red documented here</p> </li> <li>The previously mentioned tags can be used cumulatively</li> <li><code>@me</code> can be used as a shorthand for your own account's id, can be used try searching <code>from:@me</code></li> <li>If you don't want ANY filter and just have a list of all recent messages across everything you can just do <code>after:2015</code></li> </ul>"},{"location":"misc/writing-resources/#found-a-dead-cdndiscordappcom-link","title":"Found a dead <code>cdn.discordapp.com</code> link?","text":"<p>Discord CDN files linked outside of Discord expire, if they haven't been deleted you can send the link in any chat to revive it, try it with this:</p> <p>https://cdn.discordapp.com/attachments/824297395801554974/980799991201271858/cian.mp4</p>"},{"location":"misc/writing-resources/#searching-websites","title":"Searching websites","text":"<ul> <li> <p>DuckDuckGo has !bangs, learn them.</p> </li> <li> <p>Google websites have a handy before:YEAR search operator, e.g. search about a subject before it becomes trendy </p> </li> <li> <p>Chromium browsers let you search a website by typing it's name in the search bar and typing TAB, e.g. open new tab press Y, it auto suggests youtube.com, press TAB and type your search query</p> </li> </ul>"},{"location":"software/","title":"Programs","text":""},{"location":"software/espanso/","title":"Espanso","text":"<p>Text macro program, type a specific keyword and it's replaced by something you put</p> <ul> <li> espanso.org</li> <li> https://github.com/federico-terzi/espanso</li> <li> <code>scoop install main/espanso</code></li> <li> https://aur.archlinux.org/packages?O=0&amp;K=espanso</li> </ul> <p>Config file is located at <code>%APPDATA%\\espanso\\match\\base.yml</code></p> <p>It has a neat UI to remind you of the macro you've made with the value it becomes:</p> <p></p> <p>It's most useful feature to me is making codeblocks <pre><code>- trigger: ;tk\n  replace: |-\n    ```$|$\n    ```\n</code></pre></p> <p>You can make macros for links, any links, on discord you can make links to specific channels <pre><code>- trigger: ;sup\n  replace: \"&lt;#1020030329790148678&gt;\"\n- trigger: ;vid\n  replace: \"&lt;#840243812269162516&gt;\"\n- trigger: ;hof\n  replace: \"&lt;#1051234238835474502&gt;\"\n- trigger: ;obs\n  replace: \"&lt;#882917052615123025&gt;\"\n</code></pre></p> <p>If the  text you're making requires you to change a few things each time you espanse it, use forms <pre><code>- trigger: ;cpt\n  form: |\n    Ignore all instructions before this one, You're [[job]]. You have been [[thing]] for 20 years. Your task is now [[instructions]]\n</code></pre></p> <p>Sending <code>+:emoji:</code> reacts to the latest message sent, <code>\\n</code> behaves like ENTER <pre><code>- trigger: ;hrt\n  replace: \"+:heart:\\n\"\n- trigger: ;lk\n  replace: \"+:thumbsup:\\n\"\n- trigger: ;poll\n  replace: \"+:voty:\\n+:votn:\\n\"\n- trigger: ;cnt\n  replace: \"+:hapm:\\n\"\n</code></pre></p>"},{"location":"software/everything/","title":"Everything","text":"<p>voidtools Everything is a freeware that indexes each and every single file and folder on your disks for you to find them as fast as you can type.</p> <p>It has powerful filtering capabilities whether it's by file size, modified date, video frame rate or by group of filters e.g. for all files that have video extensions</p> <p></p>"},{"location":"software/everything/#installation","title":"Installation","text":"<p>Get the updated Everything 1.5a here:</p> <p>https://www.voidtools.com/everything-1.5a</p> <p>(scroll down for what's new compared to 1.4)</p> <p>It's also available on Scoop</p> <pre><code>scoop.cmd bucket add versions\nscoop install versions/everything-alpha\n</code></pre> <p>And winget:</p> <pre><code>winget install -e --id voidtools.Everything.Alpha\n</code></pre> <p>For Linux users, check out FSearch as an alternative</p>"},{"location":"software/everything/#search-examples","title":"Search examples","text":"<p>All of the minecraft screenshots you took this century: <pre><code>20??-??-??_??.??.??.png\n</code></pre></p> <p>All MP4 videos in a certain folder (recursive) <pre><code>path:D:/Vids *.mp4\n</code></pre></p> <p><code>*</code> is a wildcard pattern for any characters, <code>*.mp4</code> means all files that end in .mp4</p> <p><code>?</code> is a wilcard for a single character, e.g. <code>?.png</code> means any png file that has a name with one character e.g. <code>a.png</code></p> <p>With enough practice you can find anything on your system without effort</p> <p>See https://www.voidtools.com/support/everything/searching for more reference</p>"},{"location":"software/everything/#setting-up-the-ui","title":"Setting up the UI","text":"<p>Having to manually open up a third party app each time you want to search is not convenient, </p> <ol> <li> <p>You can set a shortcut in <code>Tools -&gt; Options... (CTRL+P)</code> in the <code>General -&gt; Keyboard</code> named <code>Toggle Window Hotkey</code>, I've been using CTRL+SHIFT+E for years, it really turns Everything from gimmicky to a must-have.</p> </li> <li> <p>Using <code>ALT+P</code> lets you toggle preview of the file you have selected</p> </li> <li> <p>In <code>View</code> you can enable <code>Filters</code> which show a list of file types (e.g. image, audio, video, documents) which essentially are search presets, just like files you can select multiple of them when holding CTRL</p> <p>I made my own called <code>Dev</code> which has search value <code>ext:ps1;cmd;rs;json;js</code> for to capture all of the files I use within git repositories</p> </li> <li> <p>You can have extra sorting options by adding more columns, just right clicking any of them: </p> <p></p> </li> </ol>"},{"location":"software/qol/","title":"Quality of Life","text":""},{"location":"software/qol/#eartrumpet","title":"EarTrumpet","text":"<p>Volume mixer that opens in one click for Windows</p> <ul> <li> File-New-Project/EarTrumpet (get the .msixbundle for an installer)</li> <li> Scoop: <code>scoop install extras/eartrumpet</code></li> <li> Winget: <code>winget install File-New-Project.EarTrumpet</code></li> <li> Choco: <code>choco install eartrumpet -y</code></li> </ul> <p>You can turn off the old volume control in the taskbar settings -&gt; Turn system icons on or off</p> <p></p>"},{"location":"software/qol/#powertoys","title":"PowerToys","text":"<p>A program regrouping a myriad of small but useful utilities, notable ones being:</p> <ul> <li>Always On Top: Make focused window stay-on-top with Win+Ctrl+T</li> <li>FancyZones: Make pre-defined window layouts per-monitor, start dragging a window, hold SHIFT and release it in the zone you want</li> <li>Color Picker: type Win+Shift+C to transform your cursor in a color picker</li> <li> <p>File Locksmith: File used by another process, which? right click the file and select File Locksmith to find out</p> </li> <li> <p> <code>winget install Microsoft PowerToys</code></p> </li> <li> Chocolatey: <code>choco install powertoys -y</code></li> </ul> <p></p>"},{"location":"software/qol/#openrgb","title":"OpenRGB","text":"<p>anage all your PC components RGBness in one non-bloated login-less program (I just use it at startup to load a profile with everything turned off)</p> <ul> <li> List of compatible components/peripherals</li> <li> openrgb.org</li> <li> <code>scoop.cmd install extras/openrgb</code></li> <li> openrgb-bin in the AUR</li> <li> <code>winget install CalcProgrammer1.OpenRGB</code></li> <li> Chocolatey: <code>choco install openrgb -y</code></li> </ul> <p></p>"},{"location":"software/qol/#sharex","title":"ShareX","text":"<p>Record / screenshot your screen/window/selected region and annotate/censor/add emojis to it, then copy it to clipboard/upload it/save it somewhere</p> <ul> <li> getsharex.com</li> <li> <code>scoop install sharex</code></li> <li> <code>winget install ShareX.ShareX</code></li> <li> Chocolatey: <code>choco install sharex -y</code></li> </ul> <p></p>"},{"location":"software/qol/#notepad-replacer","title":"Notepad Replacer","text":"<p>Redirects any program or file associations executing notepad.exe to your desired program</p> <ul> <li> binaryfortress.com/NotepadReplacer</li> </ul>"},{"location":"software/qol/#hotkey-resolution-changer","title":"Hotkey Resolution Changer","text":"<p>GUI tool to change resolution, you can set up hotkeys, it can also sit quietly in tray</p> <ul> <li> funk.eu/hrc</li> </ul> <p></p>"},{"location":"software/qol/#altsnap","title":"AltSnap","text":"<p>When holding ALT, you can drag windows around without needing to do it by clicking the title bar, you can do it from anywhere</p> <p>ALT right clicking resizes the window from the closest angle your cursor is closest to</p> <ul> <li> RamomUnch/AltSnap</li> <li> <code>scoop.cmd install extras/altsnap</code></li> </ul>"},{"location":"software/qol/#littlebigmouse","title":"LittleBigMouse","text":"<ul> <li> Installer https://github.com/mgth/LittleBigMouse/releases</li> <li> No license https://github.com/mgth/LittleBigMouse</li> <li>\ud83d\udcda Wiki https://github.com/mgth/LittleBigMouse/wiki</li> <li> Tutorial https://youtu.be/6D46stJMP68 </li> </ul> <p>Fixes mismatched (in resolution, physical size and alignment) monitor support.</p> <p>You know how a cursor not continuing on the right horizontal axis when moving from a monitor to another that have a different resolutions..</p> <p></p>"},{"location":"software/scoop/","title":"Scoop","text":"<p>A command-line program installer for Windows</p> <ul> <li>unlike Chocolatey it does not require you to run it as admin.</li> <li>unlike Winget you can install your own programs</li> <li>All apps are contained in <code>%USERPROFILE%\\Scoop</code> folder (per default, I recommend installing on a second drive)</li> <li>All software you install is in a portable factor (except the ones that end in -np, non portable)</li> </ul> <p>Installing it is as easy as pasting this in PowerShell: <pre><code>irm get.scoop.sh | iex\n</code></pre> This makes a request to load a link which redirects to the latest version of Scoop's installation script hosted on GitHub and <code>| iex</code> executes it. </p> <p>You're free to save the file on your disk and run it normally.</p>"},{"location":"software/scoop/#git-based-manifests","title":"Git-based manifests","text":"<p>Each manifest contains information to download and install the latest version of a program, it's stored as a JSON file in Git repositories (called \"buckets\") and you can look through them on Scoop's website</p> <p>It's an open standard, which means you can make your own buckets, e.g to add mine:</p>"},{"location":"software/scoop/#youll-need-git-to-clone-the-repo-and-pull-new-updates","title":"(you'll need git to clone the repo and pull new updates)","text":"<p><pre><code>scoop install git\n</code></pre> \"utils\" is the name of how it's gonna be called on your computer <pre><code>scoop bucket add utils https://github.com/couleur-tweak-tips/utils\n</code></pre> If you want to be sure you install from the right bucket and avoid duplicates is to specify the bucket name like so: <pre><code>scoop install utils/utvideo\n</code></pre></p> <p><code>scoop update</code> will <code>git pull</code> through all bucket and log you the changes</p> <p><code>scoop update &lt;app&gt; &lt;app2&gt;</code> will update specified app(s), and <code>scoop update *</code> will check for every app</p>"},{"location":"software/scoop/#auto-updating-apps","title":"Auto-updating apps","text":"<p>The following apps auto-update and mess with Scoop's update system:</p> <ul> <li>All chromium-based apps &amp; browsers<ul> <li>Discord</li> <li>Visual Studio Code</li> </ul> </li> <li>Heroic Games Launcher</li> <li>Telegram (not chromium but it also has auto updates)</li> </ul> <p>You can use <code>scoop hold &lt;app&gt;</code> to \"hold an app to disable updates\"</p>"},{"location":"software/utilities/","title":"Utilities","text":""},{"location":"software/utilities/#disk-mapping-programs","title":"Disk mapping programs","text":"<p>These let you get a visual overview of all the files on your disk / a specified folder path, with each file's size affecting how much space it takes on the map.</p> <p>Some of them let you add include/exclude patterns (e.g. to see how space do the mod jars take across all your Prism Launcher instances :)</p> <ul> <li>WizTree - Best overall</li> <li>SpaceSniffer - Has a detail slider, briefly highlights when a file is modified (HTTP-non-s website \u26a0)</li> <li>WinDirStat - Most known, has the slowest scanning</li> </ul> <p></p>"},{"location":"software/utilities/#diff-programs","title":"Diff programs","text":"<p>Have two versions of something and need to merge the good from each of them?</p> <ul> <li>BeyondCompare</li> <li>WinMerge</li> </ul> <p></p>"},{"location":"software/utilities/#compressionarchival-programs","title":"Compression/Archival programs","text":"<p>Ever encountered a .7z or .rar when downloading stuff?</p> <ul> <li>7-Zip - can extract pretty much anything out there, fast<ul> <li>NanaZip - 7-Zip UI redesign, has Dark mode</li> </ul> </li> </ul>"},{"location":"software/utilities/#directory-opus","title":"Directory Opus","text":"<p>A file explorer for power users</p> <ul> <li>PAID: 90 AUD, that's 55 USD / 50 EUR, 30 day trial (60 day registered)</li> <li> gptsoft.com.au</li> </ul> <p>It has these notable features:</p> <ul> <li> <p>Unlike File Explorer, you can paste in path with quotes and forward slashes</p> </li> <li> <p>It's snappy</p> </li> <li> <p>full scripting interface, including scriptable dialogs</p> </li> </ul> <p></p>"},{"location":"software/visual-studio-ides/","title":"Microsoft Visual Studio IDEs","text":"<p>There are three types of IDEs:</p> <ul> <li> Visual Studio Code:<ul> <li>Partly open-source</li> <li>Most popular IDE</li> </ul> </li> <li> <p> VS Codium: </p> <ul> <li>Compiled version of VSCode without telemetry </li> <li>supports extensions, though it uses a different store</li> </ul> </li> <li> <p> Visual Studio: Specialized in C/C++/C# programming and debugging</p> <ul> <li>Community edition is free</li> <li>See older versions here</li> </ul> </li> </ul>"},{"location":"software/windows-terminal/","title":"Windows Terminal","text":"<p>Modern version of the Windows command prompt / console host (conhost.exe).</p> <p>It has the main extra features:</p> <ul> <li>Tabs</li> <li>Quake mode lets you make wt appear and disappear with a keyboard shortcut</li> </ul> <p>Tabs are especially useful for people that are experimenting with scripts and end up with a bunch of conhost windows scattered around.</p>"},{"location":"software/windows-terminal/#download","title":"Download","text":"<ul> <li> microsoft/terminal (get the .msixbundle for an installer)</li> <li> Scoop: <code>scoop install extras/windows-terminal</code></li> <li> Winget: <code>winget install Microsoft.WindowsTerminal</code></li> </ul>"},{"location":"software/windows-terminal/#miscellaneous-tips","title":"Miscellaneous tips","text":"<ul> <li>You can remove the copyright notice (the one or two lines always appearing at the top of your newly-opened shell) by adding <code>-NoLogo</code> to the command line arguments of your profile settings, see more PowerShell arguments</li> </ul>"},{"location":"software/windows-ui/","title":"Windows UI","text":""},{"location":"software/windows-ui/#explorerpatcher","title":"ExplorerPatcher","text":"<p>Lets you customize various parts of the Windows UI: taskbar, system tray, file explorer, start menu, window switcher, weather widget...</p> <ul> <li> https://github.com/valinet/ExplorerPatcher</li> </ul> <p></p>"},{"location":"software/windows-ui/#translucenttb","title":"TranslucentTB","text":"<p>Customize the transparency of your taskbar</p> <ul> <li>Microsoft Store</li> <li>translucenttb.com</li> <li> <code>scoop install extras/translucenttb</code></li> </ul> <p></p>"},{"location":"software/winget/","title":"Winget","text":"<p>Microsoft' command-line package manager for Windows - unlike scoop (and like Chocolatey), apps install in their normal location - All available apps can be found in the <code>microsoft/winget-pkgs</code> repo on GitHub - Supports downloading and installing straight from Microsoft store</p> <p>The tool is preinstalled on all versions of Windows 11 and somewhat newer versions of Windows 10. If you are on either and don't have it, you can get it by getting App Installer from the Microsoft Store.</p> <p>If for some reason you don't have it installed, run the following: <pre><code>Install-PackageProvider -Name NuGet -Force | Out-Null\nInstall-Module -Name Microsoft.WinGet.Client -Force -Repository PSGallery -Scope AllUsers | Out-Null\nRepair-WinGetPackageManager\n</code></pre> If you uninstalled it before, you can bring it back with this: <pre><code>Add-AppxPackage -RegisterByFamilyName -MainPackage Microsoft.DesktopAppInstaller_8wekyb3d8bbwe\n</code></pre></p> <p>Updating apps can be somewhat slow due to the manual verification from the moderators. If your favourite app isn't available or hasn't been updated, you can use simple tools like Komac or WingetCreate to make updating easier for the winget moderators</p> <p>Don't see what you want?</p> <p>Updating apps can be somewhat slow due to the manual verification from the moderators. If your favourite app isn't available or hasn't been updated, you can use simple tools like Komac or WingetCreate.</p>"},{"location":"software/winget/#wingetapp","title":"winget.app","text":"<p>This noob-friendly lets you pick software to install and builds up a command for you to simply paste in cmd.</p>"},{"location":"software/winget/#repos","title":"Repos:","text":"<ul> <li>winget CLI tool (License: MIT)</li> <li>winget packages (manifests) you need to drill down in /manifests/, here's an example</li> </ul> <p>For more info you can read Microsoft's documentation here</p>"},{"location":"software/yt-dlp/","title":"yt-dlp","text":""},{"location":"software/yt-dlp/#installation","title":"Installation","text":"WindowsLinuxmacOS <ul> <li>WinGet: <code>winget install -e --id yt-dlp.yt-dlp</code></li> <li>Scoop: <code>scoop install yt-dlp</code></li> <li>Chocolatey: <code>choco install yt-dlp</code></li> </ul> <ul> <li>Binary install (recommended):  <pre><code>sudo curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o /usr/local/bin/yt-dlp\nsudo chmod a+rx /usr/local/bin/yt-dlp  # Make executable\n</code></pre> You can also use your distro's manager to install the package. Some common ones are listed below:</li> <li>Arch-based distros: <code>sudo pacman -Syu yt-dlp</code></li> <li>Ubuntu-based distros (copied from OBS download page): <pre><code>sudo add-apt-repository ppa:tomtomtom/yt-dlp    # Add ppa repo to apt\nsudo apt update                                 # Update package list\nsudo apt install yt-dlp                         # Install yt-dlp      \n</code></pre></li> </ul> <p>Homebrew: <code>brew install yt-dlp</code></p>"},{"location":"software/yt-dlp/#usage","title":"Usage","text":""},{"location":"software/yt-dlp/#video","title":"Video","text":"<p>Just use <code>yt-dlp &lt;url&gt;</code> and it'll download whatever it considers to be best quality and audio</p>"},{"location":"software/yt-dlp/#video-from-point-a-to-b","title":"Video (from point A to B)","text":"<p>Feel free to suggest a better way I'm just dumping this here, mind replacing <code>&lt;url&gt;</code> in there.</p> <pre><code>yt-dlp --external-downloader aria2c --external-downloader-args \"-x 16 -s 16\" --download-archive archive.txt &lt;url&gt; --no-overwrites --no-post-overwrites --no-continue --output \"%(title)s.%(ext)s\" --postprocessor-args \"-ss 00:00:45 -to 00:03:55\"\n</code></pre>"},{"location":"software/yt-dlp/#audio","title":"Audio","text":"<p>Get your desired Youtube video or playlist you want to rip audio from, and then execute</p> <p><code>yt-dlp -f 251 -x [playlist or video]</code></p> <p>Where instead of the brackets, you insert your link. Here is a breakdown of the options:</p> <ul> <li><code>-f 251</code> selects the 251 option, which is the Opus codec for YouTube</li> <li><code>-x</code> specifies to only extract the audio from the link, not the video</li> </ul> <p>iTunes users</p> <p>If you are planning on importing audio to your Iphone through Itunes, \"Opus\" is not supported. You must convert the file into mp3 or AAC for it to be imported correctly.</p>"},{"location":"video/","title":"Introduction","text":"<p>This category is dedicated to document optimal configurations of programs for creating video content (with a big focus on high quality motion blur if that's your thing) and help you forge your own personal production workflow.</p>"},{"location":"video/#definitions","title":"Definitions","text":""},{"location":"video/#frame-blending","title":"Frame blending","text":"<p>The most common form of motion blur, it is without any smearing of HUDs or general artifacting (unlike other methods like RSMB). Commonly this is done from a very high FPS (e.g. 540) down to a common FPS, i.e. 60 or 30.</p> <p>In general, the higher the input FPS, the smoother the final output would be, due to more blur frames making the blur look more seamless. Blur frames are how many frames are blended together, so <code>blur frames = input fps / output fps</code>.</p> <p>Video editors such as Vegas Pro and Adobe Premiere Pro have these features built-in. However, we recommend using seperate programs such as Smoothie first to pre-render the videos, therefore you don't have any lag in your video editor as well as having much more customization.</p>"},{"location":"video/#interpolation","title":"Interpolation","text":"<p>Video interpolation is a video processing technique that creates new frames between existing ones, effectively increasing the video's FPS using algorithms or AI.</p> <p>Notable ones are RIFE and the SVP, used in blur and Smoothie</p> <p>It generates frame(s) in the timespan between two existing frames, and the higher the input FPS, the smaller the time window between the two points are, which means the higher FPS the source the less artifacts.</p>"},{"location":"video/codecguide/","title":"Choose a suitable codec","text":"<p>When creating, exporting videos out of NLEs or running them through scripts/programs, videos, it must(1) go through re-encoding, which can be achieved using one out of many encoders, which often come a plethora configuration options\u00b9 \u00b2.</p> <ol> <li>This does not concern video cutters.</li> </ol> <p>Think about encoded video data like a tightly-packed suitcase , you need to unpack it into an succession of images in order to change anything(1)in it, then, to save this modification back to a video file, it needs to be re-encoded again.</p> <ol> <li>Not necessarily for particular scenarios: tools like LosslessCut can make cuts every I-frame which is where the compression resets and does not need to re-encode the whole video.</li> </ol> <p>The choice of a codec depends on:</p> <ul> <li>your hardware: (do you own an NVIDIA GPU?)</li> <li>what you're editing your footage with (can NLE preview it?) </li> <li>what you're uploading to: (is it compatible with target platform?), </li> <li>how much quality are you ready to lose in profit of filesize</li> <li>how fast is your upload speed</li> <li>how long you want to wait (can you let your PC render overnight?).</li> </ul> <p>Each codec has it's own pros and cons:</p> H.264 / AVC H.265 / HEVC AV1 UTVideo Fast at encoding<sup>1</sup>  Only fast when encoding with a compatible GPU Filesize/Visual fidelity ratio<sup>2</sup> Worst out the bunch Lossless,makes huge files Compatibility<sup>3</sup>  Works in some video players  AFAIK Only recent Davinci Resolve versions support importing it You may need to install it Decoding speed<sup>4</sup> Worst out the bunch  It's only got full fat I-frames, resulting in super fast decoding"},{"location":"video/codecguide/#hwenc","title":"Hardware-accelerated encoding","text":"<p>You might've also noticed the terms <code>NVENC</code>, <code>AMF</code> and <code>QuickSync</code> being mentioned after H.264, H.265 and AV1, this means the encoding is done on your GPU / iGPU instead of your CPU, this comes with pros and cons:   Faster encoding, it's processed on a specialized chip</p> <p> Much lower load on the CPU (especially useful when recording while you are playing a game)</p> <p> Worse filesize / visual fidelity ratio than CPU counterpart</p> <p>Note that AV1 Encoding is only available on last-gen cards.</p>  Should I get an RTX 4000 card for it's AV1 encoder? <p>Only if you specifically have a use in mind for archiving or workflows that works best in AV1</p> <p> Definitely a step up in visual fidelity for band-with limited scenarios (streaming)</p> <p> Most video editors don't support importing AV1 footage yet (Voukoder does support exporting with it with software and hardware encoding)</p> <p> No, you won't have better \"quality\" when recording videos, H264 CQP0 exists if you want lossless quality</p>"},{"location":"video/codecguide/#rate-controls","title":"Rate controls","text":"<p>Unless you are recording lossless (HUGE files), you need a way to constrain the video's bandwith</p> <code>CBR</code>: Constant bit rate <p>Most used for streaming nowadays</p> <code>CRF</code> / <code>CQP</code>: Constrained rate factor / Constant quantizer <p>The new prefered rate control for recording to disk, as it adapts to the \"bandwith-hungryness\" of the content, e.g. standing still in front a wall in a video-game will write way less data than when you're spinning and doing a bunch of 360s.</p> <p>It's some complex math stuff </p>"},{"location":"video/codecguide/#couleurs","title":"Couleur's routine &amp; use of codecs","text":"<p>Recording w/ OBS: <code>H.264 NVENC</code> to encode as fast(1) as possible</p> <ol> <li>Even super fast encoding settings can be lossless, NVENC's <code>P1</code> Preset which OBS calls \"Low quality\" in regard to how small it makes the files, which when encoded in CBR directly determines the quality</li> </ol> <p>Pre-rendering w/ Smoothie:  <code>UTVideo</code> - to decode the videos as fast as possible when video editing</p> <p>Exporting w/ Voukoder: <code>H265 NVENC + Upscaling</code>(1) inside the many video editors which supports Voukoder</p> <ol> <li>This mentions one of my Voukoder presets that can be installed with my installation script that has an additional filter, which (up)scales to 4K and encode on the fly without needing to encode again with a batch script</li> </ol>"},{"location":"video/codecguide/#encodingpresets","title":"Voukoder &amp; Smoothie encoding presets","text":"<ul> <li>Smoothie: Find them in <code>target/encodingpresets.ini</code></li> </ul> <p>These directly translate to FFmpeg arguments, also add the <code>4K</code> macro to add upscaling arguments </p> <ul> <li>Voukoder: My unofficial <code>Install-Voukoder</code> function</li> </ul> <p>Tries to stay faithful to the aforementioned settings, also includes <code>+ Upscale</code> editions</p>"},{"location":"video/codecguide/#other-resources-to-learn-more","title":"Other resources to learn more","text":"<ul> <li>x266.mov: a much more in-depth documentation of codecs</li> <li>https://trac.ffmpeg.org/wiki/Encode/H.264</li> </ul> <ol> <li> <p>General rule of thumb of how long you're expected to wait while it's encoding. Note that with a touch of configuration the same codec can be lightning speed or excruciatingly slow.\u00a0\u21a9</p> </li> <li> <p>Most important metric when streaming since you have a very limited bandwith budget unlike recording on disk/SSD.\u00a0\u21a9</p> </li> <li> <p>Mostly concerns being able to import videos in your video editor, uploading to Twitter, and being able to embed on Discord (aka to play back directly without the need to download). YouTube supports pretty much everything since it re-encodes after.\u00a0\u21a9</p> </li> <li> <p>Important to consider while video editing so videos play back fast in your preview.\u00a0\u21a9</p> </li> </ol>"},{"location":"video/sendto/","title":"Send To","text":"<p>Send To is a feature in Windows' right-click (context) menu that can launch scripts with the file(s) you selected</p> <p></p>"},{"location":"video/sendto/#opening-the-send-to-folder","title":"Opening the Send To folder","text":"<p>It can be opened by typing <code>shell:sendto</code> in the run dialog (Win+R)</p> <p></p> <p>Here you can make and remove shortcuts to scripts and folders</p> <p></p>"},{"location":"video/sendto/#script-arguments-behavior","title":"Script arguments behavior","text":"<p>Info</p> <p>Executable means be any of the following:</p> <ul> <li>A shortcut to an executable or batch file</li> <li>An executable or batchfile, literally</li> </ul> <p>Dragging file(s) on an executable, and doing Send To -&gt; that executable has the same behavior: </p> <p>That executable gets launched with each argument being the full file path of the file(s) selected</p> <pre><code>example.cmd \"D:\\vids\\clip1.mp4\" \"D:\\vids\\clip2.mp4\"\n</code></pre>"},{"location":"video/sendto/#program-compabitility","title":"Program compabitility","text":"<p>The following programs support passing multiple file paths at once :</p> <ul> <li>Smoothie: i've natively made it support this </li> <li>LosslessCut: in a \"batch mode\"</li> </ul> <p>These programs only support opening with one video at a time </p> <ul> <li>Avidemux: It can only open one video file at once</li> <li>FFmpeg: Each input media file needs to be separated with <code>-i</code></li> </ul>"},{"location":"video/sendto/#folder-behavior","title":"Folder behavior","text":"<p>You can also place shortcuts to folders if you want to be able to copy / move files to specific places from anywhere in the Explorer:</p> <ul> <li>Simply left clicking will copy the file</li> <li>SHIFT clicking it will move the file</li> </ul>"},{"location":"video/cutters/","title":"Video cutters vs NLEs","text":"<p>VEGAS, Premiere, After Effects, Davinci Resolve.. all these NLEs re-encode your videos when exporting your project.</p> <p>This is because they need to decode it in order to perform the actual \"editing\" of the videos you've fed it.</p> <p>When you need to cut videos and don't need all the bells and whistles of a video editor, video cutters can be a life saver:</p> Ops &amp; cons NLE re-encoding Video cutters Render times Will always be slower Lightning fast What can be edited Literally everything You can only cut from point A to B Format Unless encoding in lossless you'll always lose a little bit of quality No re-encoding, bitstream is untouched <p>e.g you have videos with a long segments you know you will ever use (e.g archiving highlights from stream VODs)</p>"},{"location":"video/cutters/#what-video-cutters-are-there","title":"What video cutters are there?","text":"<p>A lot more of them exists, but I'll cover both ends of the spectrums in terms of UI-snappiness to feature ratio:</p> <ul> <li>LosslessCut is an electron-based user interface for cutting videos,</li> <li>Avidemux is much snappier and acts as a basic front-end to cutting from the command-line with FFmpeg</li> </ul> <p>not documented on ctt.cx:</p> <ul> <li>suckless-cut: mpv lua script that replicates LosslessCut, I designed it to export directly to smoothie-rs</li> <li>vidcutter: python gui which uses mpv?? todo: add a proper description, i (couleur) never used it much</li> </ul>"},{"location":"video/cutters/avidemux/","title":"Avidemux","text":"<ul> <li> <p>User interface for converting video files</p> <p>This program has lots of features but this page focuses on it's A/B cutting feature</p> <p> Homepage </p>  Download Scoop Chocolatey pacman <p>You can get builds on the sourceforge page:</p> <p>https://avidemux.sourceforge.net/download.html</p> <p><code>scoop install avidemux</code> | <code>avidemux.json</code></p> <p><code>choco install avidemux -y</code> | package page</p> <p><code>sudo pacman -Sy avidemux-qt</code> | <code>arch package</code></p> </li> </ul> <p></p> <p>See more screenshots here</p>"},{"location":"video/cutters/avidemux/#features","title":"Features","text":"<p>Unlike LosslessCut it's very snappy but does not have as much cutting features.</p> <p>It can be used like so:</p> <ol> <li>Open the app</li> <li>Drag in a video</li> <li>Play back to where you wanna make the cuts</li> <li>Press the A and B start/end time buttons</li> <li>CTRL+S opens a file save dialog</li> </ol>"},{"location":"video/cutters/avidemux/#video-tutorial","title":"Video tutorial","text":"<p>tutorial by skyler (wallpaper)</p>"},{"location":"video/cutters/avidemux/#custom-keybindings","title":"Custom keybindings","text":"<p>If you prefer using the I and O keys to set in and out points,</p> <p>you can create named <code>settings.json</code> in the same directory that contains <code>avidemux.exe</code>(1)</p> <ol> <li>search it up in your start menu, right click it -&gt; open file location</li> </ol> <code>settings.json</code> <pre><code>\"keyboard_shortcuts\" : {\n    \"use_alternate_kbd_shortcuts\" : true,\n    \"swap_up_down_keys\" : false,\n    \"alt_mark_a\" : \"I\",\n    \"alt_mark_b\" : \"O\",\n    \"alt_reset_markers\" : \"R\",\n    \"alt_goto_mark_a\" : \"A\",\n    \"alt_goto_mark_b\" : \"B\",\n    \"alt_begin\" : \"S\",\n    \"alt_end\" : \"E\",\n    \"alt_delete\" : \"Delete\"\n}\n</code></pre>"},{"location":"video/cutters/losslesscut/","title":"LosslessCut","text":"<p>It has the following notable features:</p> <ul> <li>Upon dragging multiple files you can select a \"batch mode\" which lets you run through multiple video files at once</li> <li>Smart-cutting (experimental) lets you have frame-accurate cuts by only re-encoding the two outer edge keyframes</li> <li>It supports Send To / dragging multiple files on a shortcut to it</li> <li>You can select a different output codec</li> <li>You can chose to export as an audio-only / video-only file</li> <li>Cuts can be joined in one output video or split into multiple ones</li> </ul>"},{"location":"video/cutters/losslesscut/#losslesscut","title":"LosslessCut","text":"<p>electron-based user interface for cutting videos</p> <p> Homepage </p>  Windows Scoop Chocolatey pacman <p>Mifi distributes Lossless-Cut as a portable 7-Zip archive</p> <p> Portable .7z archive</p> <p>You can alternatively also get it for $20 from the Microsoft Store, sorry normies there's no installer.</p> <p>:simple-microsoftstore: Microsoft Store</p> <p>Winget: See microsoft/winget-pkgs#7204</p> You will need the \"extras\" bucket <p>If you've just installed Scoop, you'll need to execute the following in the cmd:</p> <pre><code>scoop.cmd update git 7zip\nscoop.cmd bucket add extras\n</code></pre> <p><code>scoop install losslesscut</code> | <code>losslesscut.json</code></p> <p><code>choco install losslesscut</code> | package page</p> <ul> <li> <p>Snapcraft: <code>losslesscut</code></p> </li> <li> <p>Flathub: <code>no.mifi.losslesscut</code></p> </li> </ul> <p>AUR:</p> <ul> <li> <p><code>losslesscut-bin</code></p> </li> <li> <p><code>losslesscut-git</code></p> </li> </ul>"},{"location":"video/cutters/losslesscut/#export-page","title":"Export page","text":"<p>If you mind the long filenames it gives to your export, you can click on the output filename (underlined in blue) and set it to this: <pre><code>${FILENAME}-cut${EXT}\n</code></pre> Though note if you make multiple exports you'll have a file conflict, you see fit.</p>"},{"location":"video/ffmpeg/","title":"Index","text":"<p>This section contains scripts for you that wrap certain capabilites of FFmpeg so you don't need to learn how to use it FFmpeg from the command line</p>"},{"location":"video/ffmpeg/#ffmpeg","title":"FFmpeg","text":"<p>FFmpeg is a solution for converting, transcoding, editing audio and video.</p> <p>It's CLI tools <code>ffmpeg</code>, <code>ffprobe</code> and <code>ffplay</code> are used in many scripts. </p> <p>It's also available as a library and used by countless programs.</p> <p>It can do any and all of these at once:</p> <ul> <li>Convert from one codec to another, or simply <code>copy</code> to transfer it without touching it (<code>-c</code>)</li> <li>Cut videos (LosslessCut uses FFmpeg for that) (<code>-ss</code> <code>-to</code>)</li> <li>Add/remove/merge audio/video/subtitle tracks (e.g multiple <code>-i</code>/<code>-input</code>)</li> </ul> <p>And a lot, a lot of other useful stuff</p>"},{"location":"video/ffmpeg/#installation","title":"Installation","text":"WindowsLinux AutomaticManual <p>You can use the Scoop package manager to easily install it to PATH </p> <pre><code>Set-ExecutionPolicy Bypass -Scope Process -Force\nirm https://get.scoop.sh | iex\nscoop.cmd install ffmpeg\n</code></pre> <p>todo: explain this in text</p> <p>the link in description in question: https://www.gyan.dev/ffmpeg/builds</p> <p></p> <p>You can use your favorite package manager</p> <p>todo: make content tabs for all package manager commands</p>"},{"location":"video/ffmpeg/#ff-tools","title":"ff-tools","text":"<p>There are three main \"fftools\":</p> <ul> <li><code>ffmpeg</code>: For handling audio, videos, etc. The swiss army knife</li> <li><code>ffplay</code>: A video player that makes use of ffmpeg's decoding abilities</li> <li><code>ffprobe</code>: Probing tools to gather information on a video/audio file's formats and specifications</li> </ul>"},{"location":"video/ffmpeg/tmix/","title":"Tmix","text":"<p>This simple batchfile is a wrapper for the ffmpeg tmix video filter.</p> <p>It can be useful to quickly convert high fps footage into lower fps with frame blending.</p> <p>You may want to use it to makes smaller files and can be decoded faster in video editors, to help that further the ffmpeg arguments are using the libx264 codec with fastdecode tuning, which allows for even less preview lag in e.g. VEGAS Pro.</p> <p>It can save considerable amounts of render time if you are editing a long video and exporting it multiple times because you're not wasting time on the frame blending.</p>"},{"location":"video/ffmpeg/tmix/#download","title":"Download","text":"<p>On that page, click on the  \"download raw file\" button on the right:</p> <p>https://github.com/couleur-tweak-tips/utils/blob/main/Miscellaneous/tmix.bat</p>"},{"location":"video/ffmpeg/tmix/#usage","title":"Usage","text":"<p>Drag and drop videos on the batch file or move it in Send To</p>"},{"location":"video/ffmpeg/tmix/#a-faster-alternative","title":"A faster alternative","text":"<p>The same result can be achieved using smoothie, by configuring it like so:</p> <pre><code>[frame blending]\nenabled: yes\nfps: 60\nintensity: 1.0\nweighting: equal\nbright blend: no\n\n[output]\nenc args: -c:v libx264 -tune fastdecode -preset veryfast -g 60 -x264-params bframes=0 -crf 20 -forced-idr 1 -strict -2 -maxrate 100M -bufsize 10M\n</code></pre>"},{"location":"video/ffmpeg/upscaling/","title":"Why bother upscaling for YouTube?","text":"<p>Scaling your video to a larger resolution (e.g <code>1920x1080</code>/<code>1080p</code> <code>3840x2160</code>/4K) tricks YouTube into giving your video more bitrate, even though you're not actually adding any detail.</p> <p>This is only useful for YouTube, it won't make your video look any better than when you're viewing it back in a media player, it'll just look less worse than the original file.</p> <p>This should be done at the very last step of every project, right before uploading. It's a waste of rendering time to edit 4K content that's been scaled.</p>"},{"location":"video/ffmpeg/upscaling/#why-not-nle","title":"Why not just set the project scale to 4K before rendering?","text":"<p>VEGAS Pro (and probably other NLEs) uses the bicubic scaling filter which makes your video a bit blurry, using FFmpeg lets you make sure you're using the right filter</p>"},{"location":"video/ffmpeg/upscaling/#why-not-voukoder","title":"Voukoder zscale","text":"<p>If you're exporting from Voukoder you can also add an upscale filter. Compared to exporting and using an upscale script, it exports and upscales a single encode, which should take less time and lose less quality, learn how to do it here</p>"},{"location":"video/ffmpeg/upscaling/#installation","title":"Installing the CTT Upscaler","text":"AutomaticManual <p>Running the following command will:</p> <ul> <li>Install FFmpeg with Scoop</li> <li>Save the upscaling script in the Send To folder</li> </ul> <p>Paste the following command in a PowerShell window, (it doesn't need to be as an Administrator):</p> Automatic upscaler installer<pre><code>iex(irm tl.ctt.cx); Get Upscaler\n</code></pre> <ol> <li> <p>Install FFmpeg</p> </li> <li> <p>Save this batch file as a .cmd file, it's recommended to save it in either:</p> <ul> <li>Your Send To folder</li> <li>Or saving it wherever and then dragging video(s) onto it</li> </ul> </li> </ol> <p>Your browser might make it a text file (e.g <code>CTT Upscaler.cmd.txt</code>), show file extensions in the File Explorer if it keeps opening Notepad when double clicking it.</p> <p>Smartscreen will always warn you about the batch files you download online, Feel free to inspect the code yourself.</p>"},{"location":"video/ffmpeg/upscaling/#comparison","title":"Comparison","text":"<p>Here are two videos, one was left as is, the other one stretched to 4K, watch it in fullscreen with the Settings -&gt; Quality option maxed out.</p> 1080p1080p stretched to 4K <p></p> <p></p>"},{"location":"video/obs/","title":"Index","text":""},{"location":"video/obs/#introduction","title":"Introduction","text":"<p>Open Broadcaster Software Studio is a free and open-source software for live streaming and recording.</p>"},{"location":"video/obs/#high-fps-recording","title":"High FPS recording","text":"<p>A lot of us configure the output encoder to record as high FPS as we get in-game(1) to then frame blend with Smoothie.</p> <ol> <li>If you get about 600FPS it's recommended to record around 480FPS to accommodate for the variations and eventual drops</li> </ol>"},{"location":"video/obs/#installing-obs","title":"Installing OBS","text":"<p>You can find the installer / a portable zip in the official downloads page</p> WindowsLinuxmacOS <ul> <li>WinGet: <code>winget install -e --id OBSProject.OBSStudio</code></li> <li>Scoop: <code>scoop bucket add extras; scoop install extras/obs-studio</code></li> <li>Chocolatey: <code>choco install obs-studio</code></li> </ul> <ul> <li>Flathub (recommended): <code>flatpak install flathub com.obsproject.Studio</code></li> <li>Arch-based distros: <code>pacman -S obs-studio</code></li> <li>Ubuntu-based distros (copied from OBS download page):   <pre><code>sudo add-apt-repository ppa:obsproject/obs-studio\nsudo apt update\nsudo apt install ffmpeg obs-studio\n</code></pre></li> </ul> <p>Unsupported</p> <p>At the moment, OBS settings for macOS aren't considered in the documentation.</p> <ul> <li>Homebrew: <code>brew install --cask obs</code></li> </ul>"},{"location":"video/obs/#other-documentation-sources","title":"Other documentation sources","text":"<p>See OBS' knowledgebase: https://obsproject.com/kb</p> <ul> <li>Launch (CLI) Parameters: https://obsproject.com/kb/launch-parameters</li> </ul>"},{"location":"video/obs/#initial-configuration","title":"Initial configuration","text":"Video Walkthrough <ol> <li>Click Cancel on the Auto-Configuration Wizard to skip it</li> <li>Open Settings  Video</li> <li>Change the Output (Scaled) Resolution to exactly match your Base (Canvas) Resolution</li> <li>Switch Common FPS Values  Fractional FPS Value and modify the numerator to change your desired output FPS</li> <li>Go to the Output tab, and change the Output Mode to Advanced<ul> <li>Recording Format: Use MPEG-4 (.mp4) for compatibility or Matroska Video (.mkv).</li> </ul> </li> <li>Go to the Audio tab, and under Global Audio Devices, configure your audio devices</li> <li>Click OK on the Settings window</li> <li>Adjust the Audio Mixer to your liking</li> <li>Add a Display Capture source (unless you're on Linux)</li> <li>At the top, go to Docks  Stats, then drag it to the side of the preview to dock it, then adjust the sizing how you'd like</li> </ol>"},{"location":"video/obs/#stats-dock","title":"Stats dock","text":"<p>The stats dock is used for monitoring if your OBS settings can keep up with your computer, as well as other statistics shown.</p> <p>The main two statistics to indicate lag are encoding lag and rendering lag. If one of these statistics are increasing when recording your game in movement, then you should adjust your OBS settings.</p>"},{"location":"video/obs/#replay-buffer","title":"Replay Buffer","text":"<p>Replay buffer is a feature in OBS that allows users to save only the last specified seconds of a recording to a video file on the press of a button or hotkey. It uses RAM as a temporary storage, similar to NVIDIA's Shadowplay.</p> <p>It's very useful for testing encoder settings (with lots of movement in the test) without making lots of useless video files, as well as easily clipping moments in gameplay or whatever else.</p> <p>You can configure it in the Replay Buffer tab in Output, and you can set hotkeys for it in Hotkeys after it has been enabled.</p>"},{"location":"video/obs/advanced/","title":"Advanced","text":"<p>This page lacks important information</p> <p>I'm not that knowledgeable regarding all the color formats, spaces and ranges, contributions welcome.</p> <ul> <li><code>Color Format</code>: NV12 (8-bit, 4:2:0, 2 planes)</li> </ul> If you want super crisp colors you can try I444, normally NV2/I420 records color (chroma) planes at half the resolution of the light (luma) planes. Learn about more :Chrominance <ul> <li> <p><code>Color Space</code>: sRGB</p> </li> <li> <p><code>Color Range</code>: Limited</p> </li> </ul> Full tends to look a bit more saturated when converted around, which some people like."},{"location":"video/obs/audio/","title":"Audio","text":""},{"location":"video/obs/audio/#configuring-multiple-audio-tracks","title":"Configuring multiple audio tracks","text":"<p>There's three types of audio to capture:</p> <ul> <li>Microphone / webcams: sound you produce by speaking</li> <li>Desktop audio: mix of all audio sources from apps</li> <li>Application audio capture [BETA]: Lets you have audio sources per program, which you can then use with multiple audio tracks to separately modify them in your video editor. </li> </ul>"},{"location":"video/obs/docks/","title":"Docks","text":"<p>OBS' user interface can be greatly customized depending on your use of it's Docks:</p> <ul> <li>in Blue: the View and Docks button mentioned throughout this article</li> <li>in Green: can be shown/hidden in View</li> <li>in Red: can be shown/hidden in Docks</li> </ul> <p></p>"},{"location":"video/obs/docks/#stats","title":"Stats","text":"<p>Displays useful statistics regarding your recording and/or streaming status, most notably (see above):</p> <ul> <li>Memory Usage</li> <li>Total data output for recording &amp; streaming</li> <li>Skipped/missed frames due to encoding/rendering lag</li> <li>Disk space available / Approximation of how long it'll take for the recording to fill up the disk</li> </ul> <p>There 2 are ways to view the stats dock</p> <ol> <li>Enabling it in Docks lets you dock it into your interface (like previously shown)</li> <li>Enabling it in View stays a separate floating window</li> </ol>"},{"location":"video/obs/docks/#scenes","title":"Scenes","text":"<p>Scenes are collections of user-defined sources, to give you an idea they\u2019re typically used by streamers who switch from game source w/ facecam, full-screen facecam, and\u00a0\"starting stream soon\" / \"brb\" text.</p> <p>If you only make use of a single source at a time (e.g recording games) you could remove the Scenes Selector and Scene Transitions for some UI headroom. </p>"},{"location":"video/obs/docks/#managing-docks","title":"Managing Docks","text":"<p>Simply select Docks or View -&gt; Select/unselect which you want enabled.</p>"},{"location":"video/obs/general/","title":"General","text":"<p>Running OBS as admin can help with Game Capture performance and compatibility, and is generally recommended in the community, to run it as admin in a single click instead of having to right click -&gt; right click obs 64bit -&gt; run as administrator, follow this simple guide:</p>"},{"location":"video/obs/general/#themes","title":"Themes","text":"Yami (OBS 29+ default)Dark (old default, most known)GreySystem (Windows)"},{"location":"video/obs/hotkeys/","title":"Hotkeys","text":"<p>All the keybinds on this page are recommended ones, OBS has no default keybinds</p> <p>If you put the same keybind on a start X and stop X / enable X and disable X it will work like a toggle.</p> <ul> <li><code>Enable Preview</code> &amp; <code>Disable Preview</code>: CTRL+ENTER</li> </ul> This helps with performance, I like to disable it after starting recording. <ul> <li><code>Reset Stats</code>: CTRL+SHIFT</li> </ul> When alt-tabbing there's always a few frames that drop, I like to reset it so I can check if it's above 0, instead of trying to remember how much there was before."},{"location":"video/obs/hotkeys/#replay-buffer","title":"Replay Buffer","text":"<ul> <li><code>Save Replay</code>: None by default</li> </ul> If you want to save clips with the Replay Buffer without having to alt tab and click on the little  button next to Stop Replay Buffer"},{"location":"video/obs/install/","title":"Install","text":""},{"location":"video/obs/output/","title":"Output","text":"<p>It's recommended to use the latest version of OBS(1), check your current version by clicking Help in the window title bar -&gt; Check For Updates</p>  Recording  Streaming Replay buffer <p>The norm for streaming today is to use CBR rate control, which sends a set amount of data per second.</p> <p>Your encoder's speed preset will determine how well compressed your X Kbps will look.</p> <p>See their documentation regarding which bitrate you should use at what resolution:</p> <ul> <li> https://support.google.com/youtube/answer/2853702</li> <li> https://help.twitch.tv/s/article/broadcasting-guidelines</li> <li> https://help.kick.com/en/articles/7066931-how-to-stream-on-kick-com</li> </ul> <p>You can measure your upload speed on speedtest.net or librespeed.org, and your stability with Waveform's bufferbloat test</p>  (NVIDIA) NVENC (AMD) AMF (Intel) QSV <p>This section lacks settings</p> <p>If you have experience regarding streaming with NVENC please contribute regarding this, for now I recommend checking NVIDIA's article</p> <ul> <li> <p><code>Rate Control</code>: CBR</p> </li> <li> <p><code>Bitrate</code>: Depends on platform and upload bandwidth</p> </li> </ul> See links above <ul> <li><code>Preset</code>: P7: Slowest (Best Quality)</li> </ul> That'll provide the most efficient encoding for the given bandwidth <ul> <li><code>Multipass Mode</code>: Two Passes (Full Resolution)</li> </ul> These two settings considerably affect the encoding speed and efficiency, they've been recently introduced to OBS and I'm not that knowledgeable regarding them. <p></p> <p>I do not own an AMD, try copying the settings shown in this video and see how they turn out:</p> <p>Feel free to contribute knowledge regarding this.</p> <p></p> <p>The settings seen in the video: <pre><code>MaxNumRefFrames=4 BReferenceEnable=1 BPicturesPattern=1 MaxConsecutiveBPictures=1 HighMotionQualityBoostEnable=1\n</code></pre></p> <p>Note: there is also some documentation on their GitHub wiki:</p> <p>https://github.com/obsproject/obs-studio/wiki/AMF-HW-Encoder-Options-And-Information https://github.com/obsproject/obs-studio/wiki/AMF-Options</p> <p>Do you know good settings for streaming? Let us know!</p> <p>I'll just recommend this guide for now</p>"},{"location":"video/obs/output/#why","title":"Why?","text":"Because there are no benefits to stay on an older version (e.g 25.8.0) of OBS anymore (except if you need compatibility with specific things like old plugins) <ul> <li>High FPS recording with multi-track audio not longer freezes when trying to stop recording</li> <li>Rumours of duplicated frames with high FPS recording in newer-than-25.0.8 versions have never resurged, probably an urban legend</li> <li>New output settings allows for more efficient / higher FPS encoding.</li> </ul> <p>If you do have a reason to keep using an old version that hasn't been mentioned (except laziness or procrastination), let me know </p>"},{"location":"video/obs/output/#recording-settings","title":"Recording Settings","text":"<ul> <li><code>Recording format</code>: MPEG-4 (.mp4)</li> </ul> Unless you're doing lengthy recordings I don't see a point in using containers (or \"format\" as OBS calls it) many NLEs still struggle to support What about Matroska (.MKV) and Hybrid/Fragmented MP4? <p>Fragmented MP4 and (especially) MKV files may not be read properly / recognized by video editors, which requires you to manually remux each one, though if your recordings are important and you can't have them get corrupted upon OBS / your OS crashing, you should use them.</p> <p>Fragmented MP4 is notorious to mess up in VEGAS, though remuxing to regular MP4 fixes it. </p> <p>In general, encoding speed fastest to slowest is NVENC (NVIDIA), AMF (AMD), QuickSync (Intel iGPU), then x264/5 (CPU)</p> <p>Regarding <code>CQP</code> and <code>CFR</code> rate controls: It's inverted compared to CBR, 0 is lossless and 51 is most compressed</p>"},{"location":"video/obs/output/#video-encoder-settings","title":"Video Encoder Settings","text":"(NVIDIA) NVENC (AMD) AMF (Intel) QSV <p>High FPS recording configuration</p> <p>If you want to record in 120+FPS you're advised to configure the following:</p> <ul> <li> <p><code>Preset</code>: P1 - P4(1)</p> <ol> <li>OBS describes low Presets as \"Lower Quality\" in the context of streaming with CBR in bandwidth-limited scenarios, if used for recording it'll be much more performant to record at the cost of bigger file sizes.</li> </ol> </li> <li> <p><code>Multipass Mode</code>: Single pass</p> </li> <li><code>Look-ahead</code>: Unchecked</li> <li><code>Psycho Visual Tuning</code>: Unchecked</li> <li><code>Max B-frames</code>: 0</li> <li><code>Keyframe Interval</code>: 0 (auto)</li> </ul> I've had the habit of turning these off / setting them to 0 for high FPS recording, they're probably relevant for streaming / high efficiency recording though. <ul> <li><code>Rate Control</code>: CQP / CQ Level / Constant QP</li> </ul> Much more adaptive than CBR, which always spits out the same constant bitrate. <ul> <li> <p><code>CQ Level</code>: 18</p> </li> <li> <p><code>Preset</code>: P7: Slowest (Best Quality)</p> </li> <li> <p><code>Multipass Mode</code>: Two Passes (Full Resolution)</p> </li> </ul> These two settings considerably affect the encoding speed and efficiency, they've been recently introduced to OBS and I'm not that knowledgeable regarding them. <ul> <li><code>GPU</code>: 0</li> </ul> This is the GPU index, only relevant to mess with if you have multiple GPUs <ul> <li> <p><code>Encoder</code>: AMD AMF H.265</p> </li> <li> <p><code>Rate control</code>: CQP</p> </li> <li> <p><code>Keyframe interval</code>: 2</p> </li> </ul> Set this to 2 if you're not planning on recording in high FPS <ul> <li> <p><code>Rate value</code>: 16-20 (depends on game)</p> </li> <li> <p><code>Quality preset</code>: Quality</p> </li> <li> <p><code>CQ Level</code>: 20</p> </li> </ul> <p>Note: there is also some documentation on the OBS Studio's GitHub wiki:</p> <p>https://github.com/obsproject/obs-studio/wiki/AMF-HW-Encoder-Options-And-Information</p> <p>https://github.com/obsproject/obs-studio/wiki/AMF-Options</p> <p>These settings are intended for recording Minecraft at 30FPS to 60FPS on Intel chips from 2020 and older, however with newer Iris XE and Arc iGPUs, you can record at 120FPS with these settings.</p> <ul> <li><code>Target Usage</code>: TU7</li> </ul> In the OBS 30 update there were various quality profiles introduced for QuickSync. TU7 is  the best performing out of all the presets, with some sacrifices to visual quality. If you are running your game on a dedicated GPU and recording with QuickSync, you can use TU4 for better quality. <ul> <li><code>Profile</code>: High</li> </ul> With OBS 30 keep it at High, it's the best performing with the most compatibility. <ul> <li><code>Keyframe Interval</code>: 3</li> </ul> Leave to 0 (auto) for the best performance, doing this will set the keyframe interval to 3 on the latest OBS version... so 3 is the actual best keyframe interval for recording at 60fps <ul> <li><code>Rate Control</code>: ICQ</li> </ul> It's preferable to use ICQ for best efficiency, it will adapt the bitrate per frame. <ul> <li><code>ICQ Quality</code>: 16 or 23 or 30</li> </ul> From some light testing Ashank found that the best quality for the file size is 16 (On UHD graphics). However if you want to record at a higher frame rate, playing more GPU bound games, or if you are encountering frame drops, increase the value to 23 or above. Values of 30 or so still look acceptable, but the quality is noticeably worse. You may use this video as reference for what TU7 and ICQ 30 looks like. Going above 30 looks objectively bad, if you are seriously struggling with recording with QSV at 30 ICQ, you should consider using a capture card, as no amount of optimization can improve your frames further. <ul> <li><code>Latency</code>normal</li> </ul> Set this to normal, as you aren't streaming. This setting is useful for getting the delay as low as possible during live streams but since this is a recording, you will not be needing it to be set lower than normal. <ul> <li><code>Max-B-frames</code>: 0</li> </ul> B-Frames are generally used as a compression method, which takes up a significant amount of CPU and GPU power when gaming. You may set this value to 3 for games with low motion (if you are using a dedicated GPU in tandem with QSV). However it is optimal to leave this at 0, as someone recording with QSV is likely to be using an iGPU which needs all the power it can get."},{"location":"video/obs/output/#in-obs","title":"In OBS","text":""},{"location":"video/obs/output/#description","title":"Description","text":"<p>Similar to NVIDIA ShadowPlay, this captures using your canvas using your recording settings and keeps in RAM only the last X seconds of what was captured and at any point you can press a hotkey (that is not bound to anything by default)  to save it as a video file.</p> <p>It's an alternative to scrub through hour long recordings / stream VODs looking for important parts, each save will be separated per video file.</p>"},{"location":"video/obs/output/#replay-buffer-settings","title":"Replay Buffer Settings","text":"Enable Replay Buffer <p>This will grant you the Start Replay Buffer button in your Controls dock</p> <ul> <li>Maximum Replay Time: up to you</li> </ul> This is the amount of seconds you want to save each time, it's labelled \"Maximum\" because if you start the replay buffer and hit Save Replay hotkey before enough time elapses, it won't be X seconds long. <ul> <li>Maximum Memory: depends on multiple factors</li> </ul> This entirely depends on how large the file size of your clips are gonna be, the biggest one I saved was 1.15GB, so I keep it at 2048MB."},{"location":"video/obs/output/#h264-avc-h265-hevc-or-av1","title":"H.264 (AVC), H.265 (HEVC) or AV1?","text":"<p>See the codec guide</p>"},{"location":"video/obs/sourcetypes/","title":"Source types","text":"WindowsLinux <p>There's a few alternatives sources for Linux, though none are as good as Game capture on Windows</p> <ul> <li>https://aur.archlinux.org/packages/obs-nvfbc-high-fps-git (read pinned comments)</li> <li>https://github.com/nowrep/obs-vkcapture (see #usage at the bottom of the page)</li> </ul>"},{"location":"video/obs/sourcetypes/#game-capture","title":"Game Capture","text":"<p>Captures a windows' content, most preferable as it performs best</p>"},{"location":"video/obs/sourcetypes/#window-capture","title":"Window Capture","text":"<p>This can also capture the title bar, if game capture is not available / broken, use it instead</p>"},{"location":"video/obs/sourcetypes/#display-capture","title":"Display Capture","text":"<p>Capture what a monitor shows, least performant.</p>"},{"location":"video/obs/video/","title":"Difference between Base (Canvas) and Output (Scaled) resolutions","text":"<p>As canvas implies, it's the resolution of the preview pane where you place sources/</p> <p>The output takes the base canvas and scales it to whatever you set it to.</p>"},{"location":"video/obs/video/#when-using-a-different-resolution-is-worth-using","title":"When using a different resolution is worth using","text":"<ul> <li> <p>For Streaming: If you're limited on bandwidth / encoding efficiency you might consider scaling down, or the opposite on YouTube for extra bitrate (same principle as upscaling)</p> </li> <li> <p>For Recording: If you know you're gonna scale to a different resolution in post editing you can do it directly while recording, though this means it's scaling on the fly, may or may not help with performance.</p> </li> </ul>"},{"location":"video/obs/video/#frame-rate","title":"Frame rate","text":"<p>All of us use Fractional FPS Value, and use <code>the fps we want</code> / <code>1</code></p>"},{"location":"video/obs/linux/","title":"Index","text":"<p>Also see dec05eba's gpu-screen-recorder if you just want to record games in high FPS without using the rest of OBS' features</p>"},{"location":"video/obs/linux/#linux-obs-configuration","title":"Linux OBS Configuration","text":"<p>On OBS for Linux, there's not much options by default for high FPS or otherwise low resource recording like Windows. This is due to inefficient capture methods:</p> <ul> <li>Screen Capture (XSHM): Generally can't record above 120 FPS without lag</li> <li>Window Capture (Xcomposite): Much more efficient, but still limited to ~540 FPS</li> <li>Pipewire Capture: Generally can't record above 60 FPS without lag</li> </ul> <p>If the default Window Capture (Xcomposite) works just fine for you, you can stop here. However, if you want more efficient capture methods, you will have to go with third-party plugins, which may or may not be worth it.</p>"},{"location":"video/obs/linux/#third-party-plugins","title":"Third-party plugins","text":"<ul> <li> NvFBC (<code>obs-nvfbc</code> patched for high FPS)<ul> <li>Requires NVIDIA, OBS 27 and X.Org</li> <li>Screen capture</li> </ul> </li> <li> OBS VkCapture (<code>obs-vkcapture</code>)<ul> <li>Game capture</li> </ul> </li> </ul>"},{"location":"video/obs/linux/nvfbc/","title":"NvFBC","text":"<p> Packaged for Arch Linux users</p> <p>If you cannot install from the AUR you're gonna have to look for alternatives or compile / install them yourself.</p>"},{"location":"video/obs/linux/nvfbc/#information","title":"Information","text":"<p>For NVIDIA users, NvFBC is available with some driver patching. NvFBC is a feature like NVENC, except that it captures your screen directly from the framebuffer very efficiently.</p> <p>Overall, this works very well for high FPS recording, and is on a par with Windows' default Display Capture source, if not better.</p> <p>However, unfortunately, this has some issues:</p> <ul> <li>The NvFBC plugin is currently incompatible with OBS 28+<ul> <li>Maybe this could be fixed in the future</li> </ul> </li> <li>You need to be on the proprietary NVIDIA drivers</li> <li>You need to use X.Org (not Wayland)<ul> <li>See this with <code>echo $XDG_SESSION_TYPE</code></li> </ul> </li> </ul>"},{"location":"video/obs/linux/nvfbc/#installation","title":"Installation","text":"<ol> <li>Install <code>nvidia-utils-nvlax</code> from the AUR, which will replace <code>nvidia-utils</code> with a patched version. It does 2 patches, all automatically:<ul> <li>NVENC patch: removes restriction on maximum number of simultaneous NVENC video encoding sessions imposed by Nvidia to consumer-grade GPUs</li> <li>NvFBC patch (required): allows to use NvFBC on consumer-grade GPUs</li> </ul> </li> <li>Install <code>downgrade</code> from the AUR</li> <li>Run <code>sudo downgrade --ala-only obs-studio</code>, install the latest version of OBS 27 (which is <code>27.2.4 2</code>)</li> <li>Install <code>obs-nvfbc-high-fps-git</code> from the AUR, which is the 'NvFBC Source' OBS plugin, patched for high FPS values</li> <li>Open OBS, and add the 'NvFBC Source'</li> <li>Configure the NvFBC source (test out settings), make the FPS the same as the OBS recording FPS</li> </ol>"},{"location":"video/obs/linux/nvfbc/#tips","title":"Tips","text":"<ul> <li>Enable Smooth FPS in Minecraft / capping your FPS, to leave some GPU usage headroom for OBS</li> <li>Toggle/disable compositing in your window manager/desktop environment</li> <li>You can use <code>teres</code> in the AUR to frame blend and interpolate</li> </ul>"},{"location":"video/obs/linux/nvfbc/#references","title":"References","text":"<ul> <li>Patched OBS NvFBC plugin</li> <li>Downgrade Pacman packages</li> <li>Patched <code>nvidia-utils</code></li> <li>OBS NvFBC plugin page</li> </ul>"},{"location":"video/obs/linux/obs-vkcapture/","title":"OBS VkCapture","text":"<p>TODO: https://github.com/nowrep/obs-vkcapture</p>"},{"location":"video/smoothie/","title":"Index","text":"Smoothie  <p>     add motion blur to videos, with granular configuration </p> <p> </p> <p></p>"},{"location":"video/smoothie/#what-is-smoothie","title":"What is Smoothie?","text":"User facingDeveloper facing <p>Smoothie applies motion blur on video-game footage, it's got features similar to smart-resampling and RSMB.</p> <p>It acts as an all-in-one filter chain, you can individually toggle and configure each component if you'd like.</p> <p>Smoothie is a cross-platform fork of blur, now rewritten in Rust.</p>"},{"location":"video/smoothie/#why-should-i-use-smoothie","title":"Why should I use Smoothie?","text":"<p>Smoothie can be a better alternative to using the following programs / features.</p> <p>They're opt-in/out, so you can disable them at your discretion via the recipe:</p> <ul> <li> <p><code>[frame blending]</code>: VEGAS Pro's smart resampling / Premiere Pro's frame blending / FFmpeg's Tmix filter</p> <p>It's magnitudes faster than rendering with VEGAS Pro's smart resample, benchmark:</p> <ul> <li><code>Smoothie-RS</code>: 10.9 seconds</li> <li><code>VEGAS Pro 18.0 (build 284)</code>: 81 seconds</li> <li><code>FFmpeg tmix</code>: 19 seconds</li> </ul> Benchmark details <p>Frame blending a 1280x720, 990fps clip to 60fps (17 weights)</p> <p>Try it yourself with the raw clip</p> <p>They were encoded with the UTVideo codec</p> <p>Here's the relevant values I've set in the recipe: <pre><code>[frame blending]\nenabled: yes\nfps: 60\nintensity: 1.0\nweighting: vegas\n\n[output]\nenc args: -c:v utvideo\ncontainer: .MKV\n</code></pre></p> <p>FFmpeg arguments: <pre><code>-i grzy.mp4 -vf tmix=frames=17 -y -r 60 -c:v utvideo tmikx.mkv\n</code></pre></p> </li> <li> <p><code>[flowblur]</code>: RSMB, After Effects' CC Force Motion Blur</p> <ul> <li> <p><code>[artifact masking]</code>: Manually reverting RSMB where it smeared in a video editor with masking tools</p> Mask example <p>E.g for apex legends:</p> <p></p> </li> </ul> </li> <li> <p><code>[pre-interp]</code>: Flowframes / RIFE</p> </li> <li><code>[output]</code>: Transcoding with FFmpeg (<code>-vcodec &lt;...&gt;</code>)</li> <li>Upscaling to <code>4K</code></li> </ul>"},{"location":"video/smoothie/#how-to-use-smoothie","title":"How to use Smoothie","text":"<p>Launching Smoothie from the start menu gives you two options:</p> <ul> <li>Drag and drop video(s) on the window</li> <li>Click <code>render</code> for a file browser dialog</li> </ul> <p>It will ignore non-video files, if you need to go through a whole folder don't fret to <code>CTRL+A</code></p> <p>You can  configure your \"recipe\" (config) using the GUI, or by modifying the <code>recipe.ini</code> file, all settings are explained here</p> <p>It can be used in scripts with it's extensive CLI arguments</p> <p>You can also feed your videos directly via SendTo </p> <p>If you don't like having to click render in the gui and want a file picker dialog straight away, make a shortcut in the start menu (<code>%APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs</code>) and add <code>--tui</code> in the target,</p> <p></p>"},{"location":"video/smoothie/cli/","title":"Command line arguments","text":"<code>-i/--input</code>: file path(s) <p>Specify input video file paths, use quotes if they contain spaces.</p> <code>-o/--output</code>: file path <p>Specify a single output video's path (do not use if multiple paths are supplied in <code>--input</code>, consider <code>--outdir</code>).</p> <code>-t/--tui</code>: bool <p>Makes Smoothie behave like an app instead of a CLI tool (e.g pause before exiting on an error).</p> <code>--outdir</code>: folder path <p>Specify output directory for all queued files, overrides <code>[miscellaneous] global output folder:</code>.</p> <code>--peek</code>: int <p>Render out frame number specified as an image file, useful when peeking to see what a frame will look like with a very slow recipe. This is passed to both <code>--start</code> and <code>--end</code> to VSPipe and does not mess up any temporal filters afaik.</p> <code>--vpy</code>: file path <p>Override the default vapoursynth python script to use (default: jamba.vpy).</p> <code>--stripaudio</code>: bool <p>No audio tracks will be added back when encoding the output video.</p> <code>--tonull</code>: bool <p>Makes VSPipe output to null (just adds <code>.</code> to arguments instead of piping Y4M to ffmpeg).</p> <code>--tompv</code>: bool <p>Redirects Y4M output to mpv, simple implementation: it tries to grab it from PATH.</p> <code>--json</code>: string <p>Trimming timecodes payload for suckless-cut, not fully ported from smoothie-py yet.</p> <code>--trim</code>, <code>--padding</code>: bool <p>Trimming behavior, not fully ported from smoothie-py yet.</p> <code>--rerun / -!!</code>: bool <p>Each time Smoothie runs, it dumps all arguments to <code>last_args.txt</code>, if smoothie crashes and you had given it a bunch of arguments that you lost, use this argument to grab them back, inspired from bash syntax e.g <code>sudo !!</code>.</p> <code>--encargs</code>: string <p>Overrides <code>[output] enc args:</code>.</p> <code>-v/--verbose</code>: bool <p>Prints verbose information, useful for debugging / curious folk.</p> <code>-r/--recipe</code>: file path <p>Specify a recipe path, defaults to recipe.ini.</p> <code>--override</code>: string <p>Override any recipe settings, e.g. <code>--override \"flowblur;amount;40\"</code>, can be used multiple times.</p>"},{"location":"video/smoothie/frameserver/","title":"Exporting from an NLE to Smoothie","text":"<p>Not suitable for most people</p> <p>Because of how slow it can be I can't recommend it, give it a try if it fits a niche edge case</p> <p>DebugMode FrameServer lets your video editor export projects as a virtual uncompressed AVI file which blur and Smoothie can use as input, effectively exporting indirectly to it.</p> <p>It supports most VEGAS versions and Premiere Pro.</p> <p> This comes with the niche convenience of not having to pre-render the clips you import</p> <p> It can be excruciatingly slow to render with it</p>"},{"location":"video/smoothie/frameserver/#download","title":"Download","text":"<p>Grab it at the DebugMode Homepage</p>"},{"location":"video/smoothie/frameserver/#installation","title":"Installation","text":""},{"location":"video/smoothie/frameserver/#1-accept-the-license","title":"1. Accept the license","text":""},{"location":"video/smoothie/frameserver/#2-select-the-video-editors-you-have","title":"2. Select the video editors you have","text":""},{"location":"video/smoothie/frameserver/#3-indicate-the-debugmode-frameserver-installation-directory-the-default-is-fine","title":"3. Indicate the DebugMode FrameServer installation directory, the default is fine:","text":"<p>Read the following steps carefully</p> <p>Spamming \"next\" will install the plugins in the wrong directories, you NEED to manually copy your video editor's installation folder path.</p>"},{"location":"video/smoothie/frameserver/#4-indicate-the-vegas-pro-installation-directory-find-it-this-way","title":"4. Indicate the VEGAS Pro installation directory; find it this way:","text":"<p>Search VEGAS up in your search menu and right click it -&gt; <code>Open file location</code> </p> <p>You'll most likely end up in your start menu's program shortcuts, in that case right click the selected shortcut again and click <code>Open file location</code> again</p> <p>If it opens a folder containing <code>vegasXX0.exe</code>, copy the folder path(1) and paste this</p> <ol> <li>If not come ask for support on Discord</li> </ol> <p></p>"},{"location":"video/smoothie/frameserver/#5-indicate-the-adobe-premiere-pro-installation-directory","title":"5. Indicate the Adobe Premiere Pro installation directory:","text":"<p>Do the same aforementioned instructions but with Premiere Pro</p>"},{"location":"video/smoothie/frameserver/#6-install-dokan","title":"6. Install Dokan","text":"<p>It'll install the Dokan library which it uses to make virtual files,  you do not need to install the optional development plugins.</p> <p></p>"},{"location":"video/smoothie/frameserver/#7-choosing-a-render-template","title":"7. Choosing a render template","text":"<p>In VEGAS you'll have to choose an audio bitrate</p> <p></p> <p>VEGAS defaults to 48kHz (CTRL+ENTER to open Project Settings  -&gt; Audio tab)</p>"},{"location":"video/smoothie/frameserver/#8-configuring-debugmode-frameserver","title":"8. Configuring Debugmode Frameserver","text":"<p>You'll need to build up a command, here's what you need to know to assemble it</p> <p>Start it with <code>cmd /k</code> if you want it to stay open after Smoothie finishes running (e.g to see the crash message before it crashes)</p> <p>Paste in the path of smoothie-rs.exe, get it by going in Smoothie's <code>/bin/</code> folder and SHIFT+RIGHT CLICKing <code>smoothie-rs.exe</code> and clicking <code>Copy as path</code></p> <p>If the terminal closes before you can see an error if one occurs, or if you're doing it for the first time, consider adding the following at the start of your command: <pre><code>cmd /k\n</code></pre></p> <p>You'll need to go in Smoothie's <code>/bin/</code> folder and shift-right click <code>smoothie-rs.exe</code> -&gt; Copy as path and paste it in</p> <p>For blur you should be able to find <code>blur-cli.exe</code> (or if you got older versions just <code>blur.exe</code>) <code>C:\\Program files (x86)\\blur</code></p> <p>You'll need to add the following arguments after:</p> <pre><code>-i \"%~1\"\n</code></pre> <p>You should find the output files in <code>C:\\CCFS\\virtual</code>, consider making a shortcut to it on your desktop/start menu</p> <p></p> <p>Here's some examples:</p> <p><pre><code>cmd /k \"D:\\smrs\\bin\\smoothie-rs.exe\" -i \"%~1\"\n</code></pre> <pre><code>\"C:\\Program Files (x86)\\blur\\blur-cli.exe\" -i \"%~1\"\n</code></pre></p>"},{"location":"video/smoothie/installation/","title":"Installing Smoothie","text":""},{"location":"video/smoothie/installation/#dependencies","title":"Dependencies","text":"<ul> <li>FFmpeg, must be present in PATH or smoothie-rs' directory, see how to install it here<ul> <li>Smoothie also makes use of ffprobe and ffplay, which should be included with your install</li> </ul> </li> </ul> <ul> <li>Video files to use it with (1)</li> </ul> <ol> <li>This may sound obviously dumb, but you can't imagine the amount of kids asking on Discord \"can it blur my desktop\" thinking it was a real-time filter.</li> </ol> VapourSynth dependencies <p>Note: These are already provided with the .ZIP for Windows users, created in VSBundler</p> <ul> <li>VapourSynth</li> <li>Python</li> </ul> <p>Plugins:</p> <ul> <li>ffms2: Source plugin</li> <li>lsmash: Another source plugin</li> <li>vs-akarin: Used for frame blending</li> <li>mvtools: Used for flowblur</li> <li>svpflow: Used for interpolation</li> <li>RIFE NCNN Vulkan: Used for pre-interp</li> <li>fmtc: Format converter</li> <li>timecube: LUT</li> </ul> <p>Scripts:</p> <ul> <li>adjust: For color grading, I don't know who made it</li> <li>filldrops: For frame deduplication, I don't know who made this one either</li> <li>havsfunc: Used to change fps and interpolate, maintained here</li> </ul> WindowsLinuxmacOS"},{"location":"video/smoothie/installation/#automatic-installer","title":"Automatic Installer","text":"<p>Click here to download the latest version  of the smoothie intaller</p> <p>It does the following: - Downloads Smoothie and FFmpeg to <code>%APPDATA%\\Smoothie</code> - Installs Visual C++ Redistributables - Makes a shortcut in the Start Menu and Send To</p>"},{"location":"video/smoothie/installation/#manual-installation","title":"Manual installation","text":"<p>This tutorial covers the manual installation instructions of Smoothie and the RIFE models (there are no automatic RIFE model installers currently)</p> <p></p> <p>Smoothie comes in a portable zip file(1), download the latest version here.</p> <ol> <li>A portable program means it doesn't come with an installer, you just unzip and run it. Upsides is it's easy to uninstall (just delete the folder lol) but downsides is you gotta make shortcuts to it yourself</li> </ol> <p>Extract the <code>smoothie-rs</code> folder somewhere, then in it you can use <code>launch.cmd</code> to launch it in it's GUI mode.</p>"},{"location":"video/smoothie/installation/#making-a-send-to-shortcut","title":"Making a Send To shortcut","text":"<p>Navigate to <code>...\\smoothie-rs\\bin</code> and get <code>smoothie-rs.exe</code>'s PATH by SHIFT+Right clicking it and \"Copy Path\"</p> <p>In <code>%APPDATA%\\Microsoft\\Windows\\SendTo</code> make a shortcut to  with add a space and <code>--tui -i</code> <p>If Smoothie is crashing on you, add the <code>-v</code> argument (that'd be <code>-v --tui -i</code>) after the smoothie-rs executable's path to enable verbose logging to see what's wrong</p>"},{"location":"video/smoothie/installation/#installing-rife-models","title":"Installing RIFE models","text":"<ol> <li>RIFE models distributed as ZIPs containing folders named by model version,</li> <li>Extract the zip to a new folder named <code>rife models</code> in your smoothie-rs folder</li> <li>Use one by setting in the recipe <code>[pre-interp] model:</code> to the folder name<ul> <li>You can also shift right click the desired model folder in the Explorer -&gt; <code>Copy as path</code> on the desired model, and paste it as a full path.</li> </ul> </li> </ol> <p>You can download a pack of them here (~400MB):</p> <ul> <li>https://github.com/nihui/rife-ncnn-vulkan/releases</li> </ul> <p>If you'd like a larger collection (folder url):</p> <ul> <li>https://download-directory.github.io/?url=https://github.com/styler00dollar/VapourSynth-RIFE-ncnn-Vulkan/tree/master/models</li> </ul> <p>Hqzkii maintains <code>smoothie-rs-linux-git</code> in the AUR</p> <p>todo, cargo should be able to compile it</p> <p>for arch nerds see the dependencies of https://aur.archlinux.org/packages/teres</p> <ul> <li>you'll also need https://aur.archlinux.org/packages/vapoursynth-plugin-vsakarin-git for frame blending</li> <li>and https://aur.archlinux.org/packages/vapoursynth-plugin-rife-ncnn-vulkan-git for pre-interp</li> </ul> <p>For non developers: there's no user friendly package for it yet.</p> <p>It is theoretically possible to install VapourSynth with Homebrew and compile every plugins (spritzer's done it before) but there's no one maintaining these packages yet.</p> <p>There's a few of them already present for you to get an idea if you wanna get started</p>"},{"location":"video/smoothie/recipe/","title":"Smoothie recipe","text":"<p>The recipe (config file) is the hardest part of Smoothie's learning curve, reading this and messing around with short clips is the best way to familiarize yourself with it. </p> <p>The values which can be turned on or off (booleans) have a bunch of aliases for convenience, I advise typing y/n or 1/0 for short</p> <p>If there are features you're not interested in using, feel free to remove them from the file, it won't break a thing and act like you disabled it(1)</p> <ol> <li>Smoothie loads <code>defaults.ini</code>, which is just like the user's <code>recipe.ini</code> but with everything disabled / max compatibility, then it overrides those value with the existing ones in <code>recipe.ini</code>.</li> </ol> <p></p> <p>Here's what each file is for:</p> <ul> <li><code>recipe.ini</code></li> </ul> The default config file you're supposed to edit. <ul> <li><code>defaults.ini</code></li> </ul> Backup of all existing settings, it's loaded first then overwritten by <code>recipe.ini</code>, so you can remove unused features. <ul> <li><code>encoding_presets.ini</code></li> </ul> <p>Preset config file for the output enc args recipe setting.</p> <p>The value on the left of the equal sign is what you type in the recipe, and the value on the right is what it'll expand to when fed to FFmpeg's arguments.</p> <p>None of them are hardcoded, so you can edit them or even create your very own FFmpeg output CLI presets.</p> <ul> <li><code>jamba.vpy</code></li> </ul> The VapourSynth script Smoothie uses, you can read how each config value is used. Having it out here means nothing prevents you from installing extra plugins in <code>/bin/vapoursynth64/plugins/</code> and wiring your own recipe ingredients. Though there are some hardcoded recipe checks"},{"location":"video/smoothie/recipe/#frame-blending","title":"frame blending","text":"<p><code>[frame blending]</code> is just like blur's <code>- blur</code> config category, VEGAS' smart resampling, and FFmpeg's <code>tmix</code> filter - but much faster. It averages every frame with it's neighboring frames, that makes motion trails and if done correctly looks like realistic motion-blur.</p> <p>On the left is a 240FPS video, and on the right a 60FPS video with frame blending, this is not a pretty example but that shows you how the frames actually end up squished in a lower FPS</p> <p>Using velocity on frame-blended footage in video-editors</p> <p>If you like running your clips through Smoothie before editing them, you can tweak the aforementioned settings like so:</p> <p>Setting the <code>fps</code>to 120, 180 or higher depending on how so you wanna go</p> <p>Raising the <code>blur intensity</code> to 2.5 or even higher depending on your taste</p> <p>And then doing frame blending / smart resampling again in the editor</p> <code>enabled</code>: yes <p>Whether or not you wish to enable this setting, if disabled the rest of this category does not matter.</p> <code>fps</code>: 60 <p>Output framerate, this and <code>intensity</code> affects the number of neighboring frames (weights) to average, after blending the video is capped to such fps value.</p> <code>intensity</code>: 1.0 <p>How intense the frame blending looks, this is identical to blur's <code>blur amount</code>.</p> <code>weighting</code>: equal <p>'Weights' are each blended frame, this option changes the opacity of each weight, you can make them manually <code>[1.0, 1.0, 1.0, 1.0, 1.0]</code> or choose from the available presets:</p> <ul> <li><code>equal</code></li> <li><code>vegas</code>: Matches VEGAS Pro smart resampling's weights closest (when used with 1.0 intensity)</li> <li><code>gaussian</code>: Ascending gaussian curve</li> <li><code>gaussian_sym</code>: Symmetrical gaussian curve</li> <li><code>ascending</code>: my personal favorite, i like to pair it with a higher intensity</li> <li><code>descending</code></li> <li><code>pyramid</code>: Opacity peaks at the middle</li> <li><code>custom</code>: (VERY NERDY) any Python expression (with restricted namespace), e.g. <code>custom; func = x**2</code></li> </ul> <p>(ALSO VERY NERDY) for <code>gaussian</code>, <code>gaussian_sym</code>, and <code>custom</code>, you can change the apex, bound, and standard deviation like so: <code>gaussian; apex = 2; bound = [0,2]; std_dev = 1</code></p> <p>Comparison of how <code>equal</code> and <code>ascending</code> look:</p> <p></p> <code>bright blend</code>: no <p>Makes the blending look similar to Premiere Pro's frame blending (in a good way), It's comparable to blending two images with additive mode, slower than non-bright, it's achieved bby temporarily converting the clip to RGB48 color space during blending, s/o Zaphyr</p>"},{"location":"video/smoothie/recipe/#interpolation","title":"interpolation","text":"<ul> <li>Motion-estimation tricks to create frames between existing ones, almost like magically increasing the framerate, this creates imperfect frames which inevitably have what we call artifacts, e.g smearing on static (HUD / overlay) parts and fast movement can look cursed with a low-fps input. \"interpolation\" in Smoothie is done with old non-DRM'd builds of SVPFlow. Also see their wiki. </li> </ul> <p>It's recommended to record in the highest fps possible, (at least 120FPS for ok results). If you're going to interpolate only with SVPFlow, lower frame rates like 60FPS often look worse than the raw clip.</p> <p>Also see pre-interp, a slower, more accurate interpolation method</p> <code>enabled</code>: yes <p>Whether or not you wish to enable this setting, if disabled the rest of this category does not matter.</p> <code>masking</code>: yes <p>Whether or not you wish to use artifact masking, note if artifact masking is disabled in it's category this setting won't matter.</p> <code>fps</code>: 960 <p>Frame rate you want to interpolate to.</p> <code>speed</code>: medium <p>Defines the accuracy of the interpolation calculations, affecting the rendering speed in the process, available values:</p> <ul> <li><code>medium</code> (most accurate)</li> <li><code>fast</code></li> <li><code>faster</code></li> <li><code>fastest</code> (least accurate)</li> </ul> <code>tuning</code>: weak <p>Tunes the settings for the type of content. From InterFrame2's docs:</p> <ul> <li><code>animation</code> - I've never seen it used for gameplay.</li> <li><code>film</code> - This offers a good balance between the accuracy of individual moving things and the cohesiveness of the frame.</li> <li><code>smooth</code> - This increases the accuracy of individual moving things while decreasing the cohesiveness of the frame.</li> <li><code>weak</code> - This decreases the accuracy of individual moving things while increasing the cohesiveness of the frame.<ul> <li>Note: This will weaken the interpolation a lot, meaning the motion isn't as smooth.</li> </ul> </li> </ul> <p>Most people prefer <code>weak</code>, some like <code>film</code> for low-fps input.</p> <code>algorithm</code>: 23 <p>Sets the algorithm. Taken from same docs:</p> <ul> <li><code>2</code> - This makes strong predictions which can be useful for cartoons but can also leave big artifacts.</li> <li><code>13</code> - This is the most intelligent algorithm since it masks many artifacts, but it is not as smooth as 23.</li> <li><code>23</code> - This is the smoothest algorithm, but it does not have the artifact masking that 13 has.</li> </ul> <p>Most people use 23 / 13</p> <code>block size</code>: auto <p>Defines block sizes for block matching algorithm, either 8x8, 16x8, 16x16, 32x16 or 32x32</p> <p>Bigger is faster but creates worse frames.</p> <p>More info: https://www.svp-team.com/wiki/Manual:SVPflow (CTRL+F \"<code>h:</code>\" to find more info about it)</p> <code>use gpu</code>: no <p>Whether or not to use GPU (video card) alongside CPU to accelerate conversion and improve quality. This is turned off by default for compatibility but I suggest turning it on.</p> <p>Note: This mode may run slower, while it is doing calculations much faster, it is also doing more complicated calculations to improve quality.</p> <code>area</code>: 0 <p>Sets the strength of the area mask, I recommend keeping this at <code>0</code>. Higher values will reduce artifacts, but greatly reduce smoothness.</p>"},{"location":"video/smoothie/recipe/#flowblur","title":"flowblur","text":"<p>Most easily comparable to Reel Smart Motion blur (RSMB), it often creates even more artifacts than interpolation (artifact masking recommended).</p> <code>enabled</code>: no <p>Whether or not you wish to enable this setting, if disabled the rest of this category does not matter.</p> <code>masking</code>: yes <p>Whether or not you wish to use artifact masking, note if artifact masking is disabled in it's category this setting won't matter.</p> <code>amount</code>: 100 <p>Strength of the blur, 0 is nothing and 200 is the max.</p> <code>do blending</code>: after <p>In which order to do frame blending and Flowblur: * <code>after</code>: slower, frame blending is done AFTER applying Flowblur, to use if you wish to replicate Freeman's Mind motion blur. * <code>before</code>: faster &amp; most similar to RSMB, frame blending is done BEFORE applying Flowblur.</p>"},{"location":"video/smoothie/recipe/#output","title":"output","text":"<p>If you want to see how much the encoding process slows down rendering speed, try out <code>--tonull</code></p> <code>process</code>: ffmpeg <p>File path to the FFmpeg executable, it defaults to just trying to call it from PATH, if you configure it's other arguments you could use any other CLI encoder that accepts YUV4MPEG input from STDIN</p> <code>enc args</code>: H264 CPU <p>FFmpeg CLI encoding arguments, for convenience you can use the presets which are all stored in encoding_presets.ini.</p> <p>If you didn't understand what any of this means, I'd recommend giving Which codec should I use? a read.</p> <p>Tip: Adding <code>4K</code> at the end will expand to the arguments necessary to upscale your video to 4K</p> <code>container</code>: MP4 <p>Video container format, defaults to MP4.</p> <p>To contain the UTVideo codec you'll need to switch to .AVI or .MKV </p> <p>You can use .MKV to read what's already been rendered before it finishes rendering.</p> <code>file format</code>: %FILENAME% ~ %FRUIT% %OUTPUT_FPS% <p>Output filename formatting, not used if <code>-o</code> / <code>--output</code> is already specified</p> <ul> <li> <p>%FILENAME% is the output file base name (without the extension)</p> </li> <li> <p>%FRUIT% will expand to a random fruit from this list \ud83d\ude0b</p> </li> <li> <p>Other values of the recipe can be used, see how it's implemented here</p> </li> </ul>"},{"location":"video/smoothie/recipe/#preview-window","title":"preview window","text":"<p>Makes FFmpeg output the rendered video live to ffplay, a video player which is almost always shipped alongside FFmpeg.</p> <p>It can be closed off without crashing, sometimes an error will show, but it doesn't effect if your video is rendered or not.</p> <code>enabled</code>: no <p>Whether or not you wish to enable this setting, if disabled the rest of this category does not matter.</p> <code>process</code>: ffplay <p>File path of executable to pipe to, if you use mpv render speed will max out at real-time (1.0x). </p> <code>output args</code>: -f yuv4mpegpipe - <p>Additional arguments to append to ffmpeg's arguments to create a second output stream.</p>"},{"location":"video/smoothie/recipe/#artifact-masking","title":"artifact masking","text":"<p>When using interpolation, flowblur, or pre-interpolation, you have the choice to not apply any of these effects on specific regions of the video with artifact masks, they're images with black and white regions. The black regions revert the effect it's applied on (remember all these <code>masking: yes</code> values? That's how you individually toggle masking).</p> <p>They're resolution specific, Smoothie will crash if you pair 1280x720 videos with 1920x1080 masks.</p> <code>enabled</code>: no <p>Globally toggle artifact masking, if disabled the rest of this category does not matter.</p> <code>feathering</code>: yes <p>If you have colors between white and black (e.g doing grey gradients) turn this on to support this, the darker the pixel color the lower the effect's opacity.</p> <code>folder path</code>: empty by default, example: D:\\smrs\\masks\\ <p>Path to the folder where you wish to store your artifact masking images, you can easily get it by shift-right clicking that folder -&gt; Copy as path.</p> <code>file name</code>: empty by default, example: overwatch.png <p>The name of the mask image file to use.</p>"},{"location":"video/smoothie/recipe/#miscellaneous","title":"miscellaneous","text":"<code>play ding</code>: no <p>Supposed to play <code>C:\\Windows\\Media\\ding.wav</code> with ffplay once Smoothie is done rendering, not yet implemented from smoothie-py.</p> <code>always verbose</code>: no <p>Equivalent to if you always passed <code>--verbose</code> to the arguments (though prefer actually using the argument as it activates verbose logging earlier, logs even more data).</p> <code>dedup threshold</code>: 0.0 <p>Rarely used because heard to measure, it's a plugin which tries to guess which frames are duplicated due to encoding lag and replaces them by interpolated ones.</p> <code>global output folder</code>: <p>By default Smoothie outputs to the same directory as the input file with <code>[output] file format:</code>.</p> <code>source indexing</code>: no <p>Index the input clips, making a cache in %TEMP%, this is useful to enable if you are rendering a clip multiple times.</p> <code>ffmpeg options</code>: -loglevel error -i - -hide_banner -stats -stats_period 0.15 <p>Arguments first passed to ffmpeg.</p> <code>ffplay options</code>: -loglevel quiet -i - -autoexit -window_title smoothie.preview <p>Arguments first passed to ffplay when the preview window is enabled.</p>"},{"location":"video/smoothie/recipe/#console","title":"console","text":"<p>On Windows you can customize the terminal window's behavior (Meant to be used with <code>conhost.exe</code>, they switched to the default to the fancier Windows Terminal on Windows 11).</p> <p>Windows Terminal does not behave well with this.</p> <code>stay on top</code>: no <p>Make the window stay on top, can still be minimized.</p> <code>borderless</code>: yes <p>Hide the window title bar, you can't move the window but can still minimize it by clicking the window from the taskbar.</p> <code>position</code>: top left <p>Move the taskbar to a corner of your main display.</p> <code>width</code>: 900 <code>height</code>: 350 <p>Dimensions of the window.</p>"},{"location":"video/smoothie/recipe/#timescale","title":"timescale","text":"<code>in</code>: 1.0 <p>Input speed, e.g if your input clip was recorded at 10% of it's speed you can speed it 10x by typing 0.1. <code>out</code>: 1.0</p> <p>Output speed, e.g if you wanna speed it up a bit you can do a lil' 1.03. \ud83d\ude3c</p>"},{"location":"video/smoothie/recipe/#color-grading","title":"color grading","text":"<code>enabled</code>: no <p>Whether or not you wish to enable this setting, if disabled the rest of this category does not matter.</p> <code>brightness</code> / <code>saturation</code> / <code>contrast</code> / <code>hue</code>: 1.0 <p>Very self-explanatory, controls the color settings of the output video.</p>"},{"location":"video/smoothie/recipe/#LUT","title":"LUT","text":"<p>Look up table filter, they're kinda like color filters to make colors exactly accurate to a standard, but we nerds mostly use it for cool color grades :)</p> <code>enabled</code>: no <p>Whether or not you wish to enable this setting, if disabled the rest of this category does not matter.</p> <code>path</code>:  <p>Full file path to the LUT filter (.cube).</p> <code>opacity</code>: 0.20 <p>Opacity of the filter.</p>"},{"location":"video/smoothie/recipe/#pre-interp","title":"pre-interp","text":"<p>Pre-interpolation uses RIFE NCNN Vulkan to do interpolation, in the filter chain it's applied before interpolation hence the term \"pre-\".</p> <p>It's very slow to use, see how to install the models here</p> <p>NCNN is used instead of RIFE for the much smaller dependencies (CUDA is like 5GB \u00b0O\u00b0).</p> <p>Some color formats fail to convert and make pre-interp crash</p> <p>Depending on how you configure your colors in  OBS' Advanced settings tab,</p> <p>Pre-interp may not work with them, it's currently an open issue on the repository</p> <p>I invite you to try fiddling around until you see what works, sRGB space &amp; Limited range works for me</p> <code>enabled</code>: no <p>Whether or not you wish to enable this setting, if disabled the rest of this category does not matter.</p> <code>masking</code>: n <p>Whether or not you wish to use artifact masking, note if artifact masking is disabled in it's category this setting won't matter.</p> <code>factor</code>: 3x <p>How much you wish to multiply the input FPS by and interpolate to that, e.g. if the video's input fps is 60 and the factor is 3: 60 x 3 = it'll interpolate 180fps</p> <code>model</code>: rife-v4.4 <p>Path to the RIFE model folder, they do not ship with Smoothie, see installation instructions</p>"},{"location":"video/smoothie/recipe/#using-multiple-recipe-files","title":"Using multiple recipe files","text":"<ol> <li>Make a copy of <code>recipe.ini</code> and name it something else</li> <li>Make a copy of the shortcut you use Smoothie with</li> <li>Add <code>--recipe name.ini</code> to the arguments (for Send To shortcuts make sure it's before <code>-i</code>, that one must be the last).</li> </ol>"},{"location":"video/smoothie/smoothievsblur/","title":"Smoothie vs. blur","text":"<p>Related: You can use the converter to convert <code>.blur-config.cfg</code> files to smoothie <code>recipe.ini</code> files</p>"},{"location":"video/smoothie/smoothievsblur/#which-is-bettershould-i-use","title":"Which is better/should I use?","text":"<p>blur and Smoothie are very similar under the hood, both use VapourSynth with very similar plugins, this page lists all the differences you'll encounter so you can make up your mind.</p> <p>This page is intended for existing blur users</p> <p>This explains the design choices I've taken while inspiring myself from blur during Smoothie's development, if you've never got familiar with it before there's little use in reading the rest of this page (except if you're trying to make a recipe look identical to a blur config)</p>"},{"location":"video/smoothie/smoothievsblur/#smoothie-pros","title":"Smoothie pros","text":"<ul> <li> <p>Smoothie recipe values are optional</p> </li> <li> <p>Smoothie has a much smoother preview window using ffplay.</p> </li> <li> <p>Smoothie has artifact masking</p> </li> <li> <p>Smoothie has flowblur</p> </li> <li> <p>Smoothie has RIFE pre-interpolation, it's not in blur since beta v1.92</p> </li> <li> <p>A plethora of CLI arguments</p> </li> </ul>"},{"location":"video/smoothie/smoothievsblur/#blur-pros","title":"blur pros","text":"<ul> <li> <p>Percentage progress and a drag-and drop queue system, I prefered making a file picker for Smoothie</p> </li> <li> <p>Global / per folder config system</p> </li> </ul>"},{"location":"video/smoothie/smoothievsblur/#terms-used","title":"Terms used","text":"<ul> <li> <p>blur's config has a category named <code>- blur</code> which I consider to be redundant, it's been renamed to a more comprehensive <code>[frame blending]</code></p> </li> <li> <p>the <code>blur amount</code> value in previously mentioned category has also been renamed to <code>intensity</code>, I'm looking for a better term than that, lmk \ud83d\udc41\ud83d\udc41</p> </li> </ul>"},{"location":"video/smoothie/smoothievsblur/#features-now-back-ported-to-blur","title":"Features now back ported to blur","text":"<p>since beta v1.92 a lot of the features that made smoothie different are now included in blur:</p> <ul> <li> <p>Frame blending is faster on Smoothie tekno copied over the code</p> </li> <li> <p>Smoothie has a non-hardcoded vpy script to modify, blur appends hard coded python code to a temp file</p> </li> <li> <p>Smoothie has one global config, blur looks if there's a config in the same dir as the input files in blur v1.92 tekno added a global config option if none were found in dir, I should copy that too \ud83d\ude0b</p> </li> </ul>"},{"location":"video/smoothie/smoothievsblur/#internals","title":"Internals","text":"<p>blur, Smoothie &amp; teres all make use of these two programs:</p> <ul> <li>VapourSynth is a video filtering library with a Python scripting front-end</li> <li>FFmpeg is used to package VSPipe's uncompressed Y4M stream into encoded videos</li> </ul>"},{"location":"video/smoothie/smoothievsblur/#timeline","title":"Timeline","text":"<ul> <li> <p>June 2020: blur got created on GitHub</p> </li> <li> <p>January 2022: blur was dormant since v1.8, I made a fork of blur named smoothie in Python  </p> </li> <li> <p>February 2022: another developer named Anima made teres, a rewrite of blur in Rust</p> </li> <li> <p>January 2023: Seeing teres I made smoothie-rs, deprecating the original Smoothie, renamed to smoothie-py</p> </li> <li> <p>April 2024: First egui source code was pushed in the smoothie-rs repository</p> </li> <li> <p>January 2025: Hqzki/hybridkernel made smoothie-go because \u00ab he felt like it \u00bb</p> </li> </ul> <p>Today blur's new beta makes it's internals more similar to Smoothie than teres was to blur.</p> <p>teres' main advantage is that it's available in the Arch user repository. smoothie-rs now also is</p>"},{"location":"video/smoothie/troubleshooting/","title":"Troubleshooting","text":"<p>When troubleshooting, make sure to read the entire error message, most of the time the text above the red error text is what explains the issue.</p> <p>Here's a handful of common errors and how to solve them:</p>"},{"location":"video/smoothie/troubleshooting/#ffmpeg-not-found","title":"<code>ffmpeg.exe is not installed/in PATH, ensure FFmpeg is installed</code>","text":"You need ffmpeg, see Smoothie's dependencies"},{"location":"video/smoothie/troubleshooting/#smoothie-instant-crash","title":"<code>*Smoothie crashing before any error can be read*</code>","text":"Run Smoothie by using <code>launch.cmd</code> and select your video. Smoothie will stay open and you can read the error. If there's no error message, it's likely a problem with your Send to shortcut."},{"location":"video/smoothie/troubleshooting/#no-stats-period","title":"<code>Unrecognized option 'stats_period'</code>","text":"Remove <code>-stats_period 0.15</code> from your <code>recipe.ini</code>'s <code>[miscellaneous] ffmpeg options:</code> category because your ffmpeg installation is outdated and does not support updating the stats (<code>size=     907KiB time=00:00:57.99 bitrate= 128.1kbits/s speed=68.6x</code>) any faster than default."},{"location":"video/smoothie/troubleshooting/#recipe-parse-error","title":"<code>Smoothie Recipe parser: setting XYZ has no parent category</code>","text":"Double check the syntax of your recipe config file. Make sure you're not using the config from the old smoothie-py or blur."},{"location":"video/smoothie/troubleshooting/#no-valid-videos","title":"<code>No valid videos were passed to smoothie</code>","text":"It means all of the input files it's gone through were not valid video files, ensure they're not corrupted / empty (0 bytes)"},{"location":"video/smoothie/troubleshooting/#invalid-yuv4mpeg-pixel-format","title":"<code>'X' is not an official yuv4mpegpipe pixel format</code>","text":"Your video is recorded in a color format that is unsuppored by SVPFlow (interpolation algorithm). Convert your video to a supported color format (NV12) or don't use interpolation (or use pre-interp instead)."},{"location":"video/smoothie/troubleshooting/#resize-error","title":"<code>VapourSynth Resize error 3074: no path between colorspaces (2/2/2 =&gt; 0/2/2)</code>","text":"This is due to some incompatible color convertion with your video during RIFE pre-interp, try changing your OBS' advanced color settings and see what works."},{"location":"video/smoothie/troubleshooting/#nvenc-driver-version-error","title":"<code>FFmpeg encoding error: Driver does not support the required nvenc API version.</code>","text":"Update your Nvidia GPU drivers or use others encoding arguments like H264/5 CPU, or UTVideo"},{"location":"video/smoothie/troubleshooting/#source-index-mismatch","title":"<code>Python exception: Source: The index does not match the source file</code>","text":"Ensure your video path doesn't have any non-english, special characters. The name of your file might be the problem, try renaming it."},{"location":"video/smoothie/troubleshooting/#warning-failed-to-load-smoothie-rsbinvapoursynth64pluginslibrifedll-getlasterror-returned-126-the-file-you-tried-to-load-or-one-of-its-dependencies-is-probably-missing","title":"<code>Warning: Failed to load [...]\\smoothie-rs\\bin\\vapoursynth64\\plugins\\librife.dll. GetLastError() returned 126. The file you tried to load or one of its dependencies is probably missing.</code>","text":"You're running this in a VM or do not have vulkan libraries installed."},{"location":"video/smoothie/troubleshooting/#the-error-is-persisting-or-not-listed-here","title":"The error is persisting or not listed here","text":"Please make a support post on our Discord or contact me <p>Shout out z1xus and gem-storm for the base of most of this page</p>"},{"location":"video/smoothie/usecases/","title":"Use case examples","text":"<p>Smoothie is a real swiss army knife when you know all of it's tricks, I'll list all the actual use cases I've seen Smoothie be a great alternative for.</p>"},{"location":"video/smoothie/usecases/#high-fps-vegas-pro-editing","title":"High-FPS VEGAS Pro editing","text":"<p>(This could be applied to Premiere Pro as well, though it has much faster pre-render/proxy capabilities, but objectively worse looking frame blending)</p> <p>Let's say I record in 480FPS and like to frame blend &amp; export at 60FPS:</p> <p>Instead of:</p> <ul> <li>Importing footage in VEGAS Pro</li> <li>Editing the footage with lots of preview lag running at 5~15 FPS tops</li> <li>Exporting with smart resampling (slow)</li> <li>Messed something up? Need to export again? Gotta also resample everything AGAIN</li> </ul> <p>Consider:</p> <ul> <li>Using Smoothie with frame blending on all clips</li> <li>Importing footage in VEGAS Pro</li> <li>Editing the footage with way less preview lag</li> <li>Exporting at the same framerate as your clips (no smart resampling thus fast)</li> </ul> <p>The only downside is that if you use something like velocity / slow downs it'll look choppy, but nothing prevents you from replacing that particular part with the original 480FPS clip</p>"},{"location":"video/smoothie/usecases/#flowframes-for-60fps-interp-then-frame-blending","title":"Flowframes (for 60+fps interp then frame blending)","text":"<p>e.g in the context of gpu-intensive tasks like recording Apex Legends gameplay</p> <p>Let's say we recorded in 180fps:</p> <p>Instead of:</p> <ul> <li>Interpolating each video file sequentially with Flowframes and exporting in PNG sequence</li> <li>Accounting for the temp storage it's gonna take from extracting video files into raw frames</li> <li>Opening VEGAS and import as PNG sequence</li> <li>Exporting with smart resampling</li> </ul> <p>Consider:</p> <ul> <li>Queue all videos to Smoothie configured to pre-interpolate (RIFE) and frame blend</li> <li>...thats it.</li> </ul> <p>Enjoy ur smooth frags :)</p>"},{"location":"video/smoothie/usecases/#doing-render-tests","title":"Doing render tests","text":"<p>For my fellow <code>#video-dicussion</code> frogs :)</p> <p>Instead of:</p> <ul> <li>Importing footage in VEGAS Pro</li> <li>Adding your color grading settings &amp; LUT file</li> <li>Exporting with MAGIX at 240M bitrate</li> <li>Moving output video file to your upscale folder</li> <li>Renaming it to input.mp4</li> <li>Sorting out the previous video files you had left in the upscale folder</li> <li>Running upscale.bat</li> <li>Uploading to YouTube</li> </ul> <p>Consider:</p> <ul> <li>Configure Smoothie like so:<ul> <li>Add your favorite LUT / configure the color grading</li> <li>Turn on frame blending </li> </ul> </li> <li>Run Smoothie</li> <li>Share  directly to Discord or to fileditch.com</li> </ul>"},{"location":"video/voukoder/","title":"What is Voukoder?","text":"<p>Voukoder is a plugin NLEs that lets you export using ffmpeg encoders and filters (notably for Upscaling)</p> <p>The currently documented Voukoder plugins on ctt.cx are:</p> <ul> <li> VEGAS Pro</li> <li>  Adobe Premiere Pro</li> <li>  Adobe After Effects</li> <li> <p> DaVinci Resolve Studio(1)</p> <ol> <li>The paid DaVinci Resolve 'Studio' edition is required  The free version does not support plugins!</li> </ol> </li> </ul>"},{"location":"video/voukoder/#installation","title":"Installation","text":"AutomaticManual <p>Open PowerShell and paste in the following command</p> <pre><code>iex(irm tl.ctt.cx);Install-Voukoder\n</code></pre> <p>The script goes through the following steps:</p> <ol> <li>Scan for an active Voukoder Core installation<ul> <li>If it is not up to date / installed, download and run the latest installer passively</li> </ul> </li> <li>Look for video editor process names<ul> <li>If there is no connector for it installed, download and run the latest installer with NLE installation directory</li> </ul> </li> <li>Display a list of render templates to import</li> </ol> <p></p>"},{"location":"video/voukoder/#install-core","title":"Installing the Core","text":"<p>You must first install the Voukoder Classic Core, only after will you install a connector which acts as the NLE-specific plugin.</p> <p>https://github.com/Vouk/voukoder/releases https://github.com/Vouk/voukoder-connectors</p>"},{"location":"video/voukoder/#install-connector","title":"Installing the Connector","text":"<p>If the connector fails to find your video editor, and simply proposes <code>C:\\</code></p> <p>then you MUST manually locate and indicate where to install it.</p> <p></p>  VEGAS Pro  Adobe Premiere Pro &amp;   Adobe After Effects <ol> <li> <p>Search VEGAS up in your search menu and right click it -&gt; <code>Open file location</code> </p> </li> <li> <p>You'll most likely end up in your start menu's program shortcuts, in that case right click the selected shortcut again and click <code>Open file location</code> again</p> </li> <li> <p>If it opens a folder containing <code>vegas..0.exe</code>, copy the folder path(1) and paste this</p> <ol> <li>If not come ask for support on Discord</li> </ol> <p></p> </li> </ol> <p>Paste in the following folder path:</p> <pre><code>C:\\Program Files\\Adobe\\Common\\Plug-ins\\7.0\\MediaCore\\\n</code></pre> <p>This folder path worked for me when it didn't propose it, if you know more about this please contribute.</p>"},{"location":"video/voukoder/after-effects/","title":"After Effects","text":"<p>Start by opening up your Export settings by going into <code>File</code> -&gt; <code>Export</code> -&gt; <code>Add to Render Queue</code></p> <p>Ensure you don't have any leftover render queues by selecting everything but the lasts and pressing DEL to remove them</p> <p></p> <p>To make a new template, click on the Down arrow right next to <code>Output Module:</code> and select <code>Make Template...</code></p> <p>Give it a settings name and click <code>Edit</code></p> <p></p>  Lossless  Exporting with Voukoder <p>While writing this I just realized the only video format After Effectrs let you export is lossless uncompressed AVI, look up tutorials on how to use <code>Adobe Media Encoder</code> I guess..</p> <p>Select Voukoder in the Format dropdown and configure it</p> <p></p> <p>After having configured <code>Output Module Settings</code>, click <code>Ok</code> to close, and <code>Ok</code> again on the <code>Output Module Templates</code> to save your new template.</p>"},{"location":"video/voukoder/configuration/","title":"Configuring Voukoder","text":"<p>The following relevant encoders are available on Voukoder:</p>"},{"location":"video/voukoder/configuration/#compression-based-codecs","title":"Compression-based codecs","text":"<ul> <li>H.264 (AVC) &amp; H.265 (HEVC)<ul> <li>for CPU (software x26*)</li> <li>NVENC (NVIDIA)</li> <li>AMF (AMD)</li> <li>QuickSync (Intel)</li> </ul> </li> <li>VP9</li> <li>AV1<ul> <li>for CPU (SVT-AV1)</li> <li>NVENC (NVIDIA)</li> </ul> </li> </ul> <p>There might be other hardware accelerated encoders, feel free to add thme.</p>"},{"location":"video/voukoder/configuration/#lossless-codecs","title":"Lossless codecs","text":"<p>They don't need much configuration, simply select in the Video pane -&gt; Encoder tab them and save.</p> <ul> <li>UTVideo (recommended)</li> <li>ProRes</li> </ul> H.264 (NVENC)HEVC (NVENC)H.264 (x264)HEVC (x265) <p></p> <p></p> <p></p> <p></p>"},{"location":"video/voukoder/configuration/#upscaling","title":"Upscaling","text":"<p>You can upscale and encode at the same time with Voukoder using the <code>zscale</code> filter</p> <p></p> <p></p>"},{"location":"video/voukoder/premiere/","title":"Premiere Pro","text":"<p>Start by opening up your Export settings by going into <code>File</code> -&gt; <code>Export</code> -&gt; <code>Media...</code></p>  H264|H265  Exporting with Voukoder <p>You may make your mind and choose between H.264 and H.265 in the Codec guide</p> <p>In <code>Encoding Settings</code> -&gt; <code>Performance</code> if you have another option than <code>Software Only</code>, you're able to export using hardware accelerated encoding, see the link above</p> <p></p> <p>After selecting Voukoder in the format drop down, configure the encoder by going into the Voukoder tab and clicking <code>Configure...</code></p> <p></p> <p>At the bottom <code>Time Interpolation</code> is a very important setting:</p> <ul> <li><code>Frame Sampling</code>: Excess of framerate of your footage in comparison to the output Frame Rate will be dropped</li> <li><code>Frame Blending</code>: Excess of framerate of your footage in comparison to the output Frame Rate will be blended together, giving it a motion blur effect, it's very common for people to agree that Premiere Pro's is the fastest but worst looking, consider pre-rendering with Smoothie</li> </ul> <p>Don't forget to save your preset for later use</p> <p></p> <p>This will save as a <code>.epr</code> file in <code>%USERPROFILE%\\Documents\\Adobe\\Adobe Media Encoder\\12.0\\Presets</code></p>"},{"location":"video/voukoder/resolve/","title":"DaVinci Resolve","text":"<p>Start by opening the <code>Deliver</code> tab (rightmost) at the bottom</p>  H.264|H.265 Master  Exporting with Voukoder <p>Depending on the edition of Resolve you own, you may encode with either the CPU (software/native encoding) or NVIDIA NVENC (hardware-accelerated), see Codec guide for more info about it.</p> <p>These settings are pretty close to default, feel free to suggest improvepments</p> Encoder: Native (CPU)Encoder: NVIDIA <p>You're only given constant bitrate control, see YouTube's table here</p> <p></p> <p>You might want to lower the constant QP I, P &amp; B values if you find it too compressed</p> <p></p> <p></p> <p>Don't forget to save your preset after configuring:</p> <p></p>"},{"location":"video/voukoder/vegas/","title":"VEGAS Pro","text":"<p>After finishing editing, go ahead and export your project by going in <code>File</code> -&gt; <code>Render As...</code></p> <p></p> <p>You'll be prompted with the Render Formats (left pane), each having their own codecs</p>  MAGIX (H264|H265)/AAC MP4  Exporting with Voukoder <p>Choose between H.264, H.265 and CPU/HW encoding by reading the Codec guide</p> <p></p> <p>You can render in your project's native resolution and use the script from Upscaling</p> <p>Or if set the scale to 3840x2160, do mind you won't have control over the scaling filter (iirc vegas uses bicubic which isn't that crisp)</p> <p></p> <p>Set the desired output FPS Project properties</p> <p>Voukoder behaves differently than MAGIX.</p> <p>It gets it's output resolution and frame rate from the project properties, NOT from the render template (notice how there's no text boxes asking you to select a resolution/fps anywhere)</p> <p>Tip: Press CTRL+ENTER to open VEGAS' project properties</p> <p>Voukoder differs by having everything in <code>Voukoder</code>, with all codecs nested in the Voukoder dialog</p> <p>If you installed the Core and right Connector, <code>Voukoder</code> should be available in the list of available formats</p> <p>Select <code>Video project default (4:2:0 8 bit), Audio: project default</code>, which is fine in 99% of edge cases.</p> <p></p> <p>Click the <code>Show Voukoder dialog</code> button</p> <p>Learn how to configure it to your needs in  Configuration,</p> <p></p> <p>Do not forget to customize the <code>Project</code> on the bottom tabs:</p> <ol> <li>Set the video rendering quality to <code>Best</code></li> <li>Adjust color space and range if needed</li> <li>Give it a name to easily use and remember it later</li> <li>Hit the save icon on the top right</li> </ol> <p>![]../../assets/images/video/voukoder/vegas-finishtemplate.png)</p>"}]}